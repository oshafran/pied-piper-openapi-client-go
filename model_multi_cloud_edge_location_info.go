/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MultiCloudEdgeLocationInfo struct for MultiCloudEdgeLocationInfo
type MultiCloudEdgeLocationInfo struct {
	EdgeType *string `json:"edgeType,omitempty"`
	EqLocationInfo *EquinixLocationInfo `json:"eqLocationInfo,omitempty"`
	LocationId *string `json:"locationId,omitempty"`
	LocationName *string `json:"locationName,omitempty"`
	MpLocationInfo *MegaportLocationInfo `json:"mpLocationInfo,omitempty"`
}

// NewMultiCloudEdgeLocationInfo instantiates a new MultiCloudEdgeLocationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiCloudEdgeLocationInfo() *MultiCloudEdgeLocationInfo {
	this := MultiCloudEdgeLocationInfo{}
	return &this
}

// NewMultiCloudEdgeLocationInfoWithDefaults instantiates a new MultiCloudEdgeLocationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiCloudEdgeLocationInfoWithDefaults() *MultiCloudEdgeLocationInfo {
	this := MultiCloudEdgeLocationInfo{}
	return &this
}

// GetEdgeType returns the EdgeType field value if set, zero value otherwise.
func (o *MultiCloudEdgeLocationInfo) GetEdgeType() string {
	if o == nil || isNil(o.EdgeType) {
		var ret string
		return ret
	}
	return *o.EdgeType
}

// GetEdgeTypeOk returns a tuple with the EdgeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgeLocationInfo) GetEdgeTypeOk() (*string, bool) {
	if o == nil || isNil(o.EdgeType) {
    return nil, false
	}
	return o.EdgeType, true
}

// HasEdgeType returns a boolean if a field has been set.
func (o *MultiCloudEdgeLocationInfo) HasEdgeType() bool {
	if o != nil && !isNil(o.EdgeType) {
		return true
	}

	return false
}

// SetEdgeType gets a reference to the given string and assigns it to the EdgeType field.
func (o *MultiCloudEdgeLocationInfo) SetEdgeType(v string) {
	o.EdgeType = &v
}

// GetEqLocationInfo returns the EqLocationInfo field value if set, zero value otherwise.
func (o *MultiCloudEdgeLocationInfo) GetEqLocationInfo() EquinixLocationInfo {
	if o == nil || isNil(o.EqLocationInfo) {
		var ret EquinixLocationInfo
		return ret
	}
	return *o.EqLocationInfo
}

// GetEqLocationInfoOk returns a tuple with the EqLocationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgeLocationInfo) GetEqLocationInfoOk() (*EquinixLocationInfo, bool) {
	if o == nil || isNil(o.EqLocationInfo) {
    return nil, false
	}
	return o.EqLocationInfo, true
}

// HasEqLocationInfo returns a boolean if a field has been set.
func (o *MultiCloudEdgeLocationInfo) HasEqLocationInfo() bool {
	if o != nil && !isNil(o.EqLocationInfo) {
		return true
	}

	return false
}

// SetEqLocationInfo gets a reference to the given EquinixLocationInfo and assigns it to the EqLocationInfo field.
func (o *MultiCloudEdgeLocationInfo) SetEqLocationInfo(v EquinixLocationInfo) {
	o.EqLocationInfo = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *MultiCloudEdgeLocationInfo) GetLocationId() string {
	if o == nil || isNil(o.LocationId) {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgeLocationInfo) GetLocationIdOk() (*string, bool) {
	if o == nil || isNil(o.LocationId) {
    return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *MultiCloudEdgeLocationInfo) HasLocationId() bool {
	if o != nil && !isNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *MultiCloudEdgeLocationInfo) SetLocationId(v string) {
	o.LocationId = &v
}

// GetLocationName returns the LocationName field value if set, zero value otherwise.
func (o *MultiCloudEdgeLocationInfo) GetLocationName() string {
	if o == nil || isNil(o.LocationName) {
		var ret string
		return ret
	}
	return *o.LocationName
}

// GetLocationNameOk returns a tuple with the LocationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgeLocationInfo) GetLocationNameOk() (*string, bool) {
	if o == nil || isNil(o.LocationName) {
    return nil, false
	}
	return o.LocationName, true
}

// HasLocationName returns a boolean if a field has been set.
func (o *MultiCloudEdgeLocationInfo) HasLocationName() bool {
	if o != nil && !isNil(o.LocationName) {
		return true
	}

	return false
}

// SetLocationName gets a reference to the given string and assigns it to the LocationName field.
func (o *MultiCloudEdgeLocationInfo) SetLocationName(v string) {
	o.LocationName = &v
}

// GetMpLocationInfo returns the MpLocationInfo field value if set, zero value otherwise.
func (o *MultiCloudEdgeLocationInfo) GetMpLocationInfo() MegaportLocationInfo {
	if o == nil || isNil(o.MpLocationInfo) {
		var ret MegaportLocationInfo
		return ret
	}
	return *o.MpLocationInfo
}

// GetMpLocationInfoOk returns a tuple with the MpLocationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgeLocationInfo) GetMpLocationInfoOk() (*MegaportLocationInfo, bool) {
	if o == nil || isNil(o.MpLocationInfo) {
    return nil, false
	}
	return o.MpLocationInfo, true
}

// HasMpLocationInfo returns a boolean if a field has been set.
func (o *MultiCloudEdgeLocationInfo) HasMpLocationInfo() bool {
	if o != nil && !isNil(o.MpLocationInfo) {
		return true
	}

	return false
}

// SetMpLocationInfo gets a reference to the given MegaportLocationInfo and assigns it to the MpLocationInfo field.
func (o *MultiCloudEdgeLocationInfo) SetMpLocationInfo(v MegaportLocationInfo) {
	o.MpLocationInfo = &v
}

func (o MultiCloudEdgeLocationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EdgeType) {
		toSerialize["edgeType"] = o.EdgeType
	}
	if !isNil(o.EqLocationInfo) {
		toSerialize["eqLocationInfo"] = o.EqLocationInfo
	}
	if !isNil(o.LocationId) {
		toSerialize["locationId"] = o.LocationId
	}
	if !isNil(o.LocationName) {
		toSerialize["locationName"] = o.LocationName
	}
	if !isNil(o.MpLocationInfo) {
		toSerialize["mpLocationInfo"] = o.MpLocationInfo
	}
	return json.Marshal(toSerialize)
}

type NullableMultiCloudEdgeLocationInfo struct {
	value *MultiCloudEdgeLocationInfo
	isSet bool
}

func (v NullableMultiCloudEdgeLocationInfo) Get() *MultiCloudEdgeLocationInfo {
	return v.value
}

func (v *NullableMultiCloudEdgeLocationInfo) Set(val *MultiCloudEdgeLocationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiCloudEdgeLocationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiCloudEdgeLocationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiCloudEdgeLocationInfo(val *MultiCloudEdgeLocationInfo) *NullableMultiCloudEdgeLocationInfo {
	return &NullableMultiCloudEdgeLocationInfo{value: val, isSet: true}
}

func (v NullableMultiCloudEdgeLocationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiCloudEdgeLocationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


