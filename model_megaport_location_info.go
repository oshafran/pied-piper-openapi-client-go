/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MegaportLocationInfo struct for MegaportLocationInfo
type MegaportLocationInfo struct {
	Address *string `json:"address,omitempty"`
	Country *string `json:"country,omitempty"`
	LiveDate *string `json:"liveDate,omitempty"`
	Market *string `json:"market,omitempty"`
	MetroName *string `json:"metroName,omitempty"`
	MpMVEInfo *MegaportMVEInfo `json:"mpMVEInfo,omitempty"`
	NetworkRegion *string `json:"networkRegion,omitempty"`
	SiteCode *string `json:"siteCode,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewMegaportLocationInfo instantiates a new MegaportLocationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMegaportLocationInfo() *MegaportLocationInfo {
	this := MegaportLocationInfo{}
	return &this
}

// NewMegaportLocationInfoWithDefaults instantiates a new MegaportLocationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMegaportLocationInfoWithDefaults() *MegaportLocationInfo {
	this := MegaportLocationInfo{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *MegaportLocationInfo) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MegaportLocationInfo) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MegaportLocationInfo) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *MegaportLocationInfo) SetAddress(v string) {
	o.Address = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *MegaportLocationInfo) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MegaportLocationInfo) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *MegaportLocationInfo) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *MegaportLocationInfo) SetCountry(v string) {
	o.Country = &v
}

// GetLiveDate returns the LiveDate field value if set, zero value otherwise.
func (o *MegaportLocationInfo) GetLiveDate() string {
	if o == nil || o.LiveDate == nil {
		var ret string
		return ret
	}
	return *o.LiveDate
}

// GetLiveDateOk returns a tuple with the LiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MegaportLocationInfo) GetLiveDateOk() (*string, bool) {
	if o == nil || o.LiveDate == nil {
		return nil, false
	}
	return o.LiveDate, true
}

// HasLiveDate returns a boolean if a field has been set.
func (o *MegaportLocationInfo) HasLiveDate() bool {
	if o != nil && o.LiveDate != nil {
		return true
	}

	return false
}

// SetLiveDate gets a reference to the given string and assigns it to the LiveDate field.
func (o *MegaportLocationInfo) SetLiveDate(v string) {
	o.LiveDate = &v
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *MegaportLocationInfo) GetMarket() string {
	if o == nil || o.Market == nil {
		var ret string
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MegaportLocationInfo) GetMarketOk() (*string, bool) {
	if o == nil || o.Market == nil {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *MegaportLocationInfo) HasMarket() bool {
	if o != nil && o.Market != nil {
		return true
	}

	return false
}

// SetMarket gets a reference to the given string and assigns it to the Market field.
func (o *MegaportLocationInfo) SetMarket(v string) {
	o.Market = &v
}

// GetMetroName returns the MetroName field value if set, zero value otherwise.
func (o *MegaportLocationInfo) GetMetroName() string {
	if o == nil || o.MetroName == nil {
		var ret string
		return ret
	}
	return *o.MetroName
}

// GetMetroNameOk returns a tuple with the MetroName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MegaportLocationInfo) GetMetroNameOk() (*string, bool) {
	if o == nil || o.MetroName == nil {
		return nil, false
	}
	return o.MetroName, true
}

// HasMetroName returns a boolean if a field has been set.
func (o *MegaportLocationInfo) HasMetroName() bool {
	if o != nil && o.MetroName != nil {
		return true
	}

	return false
}

// SetMetroName gets a reference to the given string and assigns it to the MetroName field.
func (o *MegaportLocationInfo) SetMetroName(v string) {
	o.MetroName = &v
}

// GetMpMVEInfo returns the MpMVEInfo field value if set, zero value otherwise.
func (o *MegaportLocationInfo) GetMpMVEInfo() MegaportMVEInfo {
	if o == nil || o.MpMVEInfo == nil {
		var ret MegaportMVEInfo
		return ret
	}
	return *o.MpMVEInfo
}

// GetMpMVEInfoOk returns a tuple with the MpMVEInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MegaportLocationInfo) GetMpMVEInfoOk() (*MegaportMVEInfo, bool) {
	if o == nil || o.MpMVEInfo == nil {
		return nil, false
	}
	return o.MpMVEInfo, true
}

// HasMpMVEInfo returns a boolean if a field has been set.
func (o *MegaportLocationInfo) HasMpMVEInfo() bool {
	if o != nil && o.MpMVEInfo != nil {
		return true
	}

	return false
}

// SetMpMVEInfo gets a reference to the given MegaportMVEInfo and assigns it to the MpMVEInfo field.
func (o *MegaportLocationInfo) SetMpMVEInfo(v MegaportMVEInfo) {
	o.MpMVEInfo = &v
}

// GetNetworkRegion returns the NetworkRegion field value if set, zero value otherwise.
func (o *MegaportLocationInfo) GetNetworkRegion() string {
	if o == nil || o.NetworkRegion == nil {
		var ret string
		return ret
	}
	return *o.NetworkRegion
}

// GetNetworkRegionOk returns a tuple with the NetworkRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MegaportLocationInfo) GetNetworkRegionOk() (*string, bool) {
	if o == nil || o.NetworkRegion == nil {
		return nil, false
	}
	return o.NetworkRegion, true
}

// HasNetworkRegion returns a boolean if a field has been set.
func (o *MegaportLocationInfo) HasNetworkRegion() bool {
	if o != nil && o.NetworkRegion != nil {
		return true
	}

	return false
}

// SetNetworkRegion gets a reference to the given string and assigns it to the NetworkRegion field.
func (o *MegaportLocationInfo) SetNetworkRegion(v string) {
	o.NetworkRegion = &v
}

// GetSiteCode returns the SiteCode field value if set, zero value otherwise.
func (o *MegaportLocationInfo) GetSiteCode() string {
	if o == nil || o.SiteCode == nil {
		var ret string
		return ret
	}
	return *o.SiteCode
}

// GetSiteCodeOk returns a tuple with the SiteCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MegaportLocationInfo) GetSiteCodeOk() (*string, bool) {
	if o == nil || o.SiteCode == nil {
		return nil, false
	}
	return o.SiteCode, true
}

// HasSiteCode returns a boolean if a field has been set.
func (o *MegaportLocationInfo) HasSiteCode() bool {
	if o != nil && o.SiteCode != nil {
		return true
	}

	return false
}

// SetSiteCode gets a reference to the given string and assigns it to the SiteCode field.
func (o *MegaportLocationInfo) SetSiteCode(v string) {
	o.SiteCode = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MegaportLocationInfo) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MegaportLocationInfo) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MegaportLocationInfo) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MegaportLocationInfo) SetStatus(v string) {
	o.Status = &v
}

func (o MegaportLocationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.LiveDate != nil {
		toSerialize["liveDate"] = o.LiveDate
	}
	if o.Market != nil {
		toSerialize["market"] = o.Market
	}
	if o.MetroName != nil {
		toSerialize["metroName"] = o.MetroName
	}
	if o.MpMVEInfo != nil {
		toSerialize["mpMVEInfo"] = o.MpMVEInfo
	}
	if o.NetworkRegion != nil {
		toSerialize["networkRegion"] = o.NetworkRegion
	}
	if o.SiteCode != nil {
		toSerialize["siteCode"] = o.SiteCode
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableMegaportLocationInfo struct {
	value *MegaportLocationInfo
	isSet bool
}

func (v NullableMegaportLocationInfo) Get() *MegaportLocationInfo {
	return v.value
}

func (v *NullableMegaportLocationInfo) Set(val *MegaportLocationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMegaportLocationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMegaportLocationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMegaportLocationInfo(val *MegaportLocationInfo) *NullableMegaportLocationInfo {
	return &NullableMegaportLocationInfo{value: val, isSet: true}
}

func (v NullableMegaportLocationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMegaportLocationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


