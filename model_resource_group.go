/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResourceGroup struct for ResourceGroup
type ResourceGroup struct {
	Desc *string `json:"desc,omitempty"`
	DeviceIPs []string `json:"deviceIPs,omitempty"`
	DeviceIps []string `json:"deviceIps,omitempty"`
	Id map[string]interface{} `json:"id,omitempty"`
	MgmtSytemIpsMap *map[string]string `json:"mgmtSytemIpsMap,omitempty"`
	Name *string `json:"name,omitempty"`
	SiteIds []int64 `json:"siteIds,omitempty"`
	UuidSytemIpsMap *map[string]string `json:"uuidSytemIpsMap,omitempty"`
}

// NewResourceGroup instantiates a new ResourceGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceGroup() *ResourceGroup {
	this := ResourceGroup{}
	return &this
}

// NewResourceGroupWithDefaults instantiates a new ResourceGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceGroupWithDefaults() *ResourceGroup {
	this := ResourceGroup{}
	return &this
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *ResourceGroup) GetDesc() string {
	if o == nil || isNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetDescOk() (*string, bool) {
	if o == nil || isNil(o.Desc) {
    return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *ResourceGroup) HasDesc() bool {
	if o != nil && !isNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *ResourceGroup) SetDesc(v string) {
	o.Desc = &v
}

// GetDeviceIPs returns the DeviceIPs field value if set, zero value otherwise.
func (o *ResourceGroup) GetDeviceIPs() []string {
	if o == nil || isNil(o.DeviceIPs) {
		var ret []string
		return ret
	}
	return o.DeviceIPs
}

// GetDeviceIPsOk returns a tuple with the DeviceIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetDeviceIPsOk() ([]string, bool) {
	if o == nil || isNil(o.DeviceIPs) {
    return nil, false
	}
	return o.DeviceIPs, true
}

// HasDeviceIPs returns a boolean if a field has been set.
func (o *ResourceGroup) HasDeviceIPs() bool {
	if o != nil && !isNil(o.DeviceIPs) {
		return true
	}

	return false
}

// SetDeviceIPs gets a reference to the given []string and assigns it to the DeviceIPs field.
func (o *ResourceGroup) SetDeviceIPs(v []string) {
	o.DeviceIPs = v
}

// GetDeviceIps returns the DeviceIps field value if set, zero value otherwise.
func (o *ResourceGroup) GetDeviceIps() []string {
	if o == nil || isNil(o.DeviceIps) {
		var ret []string
		return ret
	}
	return o.DeviceIps
}

// GetDeviceIpsOk returns a tuple with the DeviceIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetDeviceIpsOk() ([]string, bool) {
	if o == nil || isNil(o.DeviceIps) {
    return nil, false
	}
	return o.DeviceIps, true
}

// HasDeviceIps returns a boolean if a field has been set.
func (o *ResourceGroup) HasDeviceIps() bool {
	if o != nil && !isNil(o.DeviceIps) {
		return true
	}

	return false
}

// SetDeviceIps gets a reference to the given []string and assigns it to the DeviceIps field.
func (o *ResourceGroup) SetDeviceIps(v []string) {
	o.DeviceIps = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResourceGroup) GetId() map[string]interface{} {
	if o == nil || isNil(o.Id) {
		var ret map[string]interface{}
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetIdOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Id) {
    return map[string]interface{}{}, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResourceGroup) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given map[string]interface{} and assigns it to the Id field.
func (o *ResourceGroup) SetId(v map[string]interface{}) {
	o.Id = v
}

// GetMgmtSytemIpsMap returns the MgmtSytemIpsMap field value if set, zero value otherwise.
func (o *ResourceGroup) GetMgmtSytemIpsMap() map[string]string {
	if o == nil || isNil(o.MgmtSytemIpsMap) {
		var ret map[string]string
		return ret
	}
	return *o.MgmtSytemIpsMap
}

// GetMgmtSytemIpsMapOk returns a tuple with the MgmtSytemIpsMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetMgmtSytemIpsMapOk() (*map[string]string, bool) {
	if o == nil || isNil(o.MgmtSytemIpsMap) {
    return nil, false
	}
	return o.MgmtSytemIpsMap, true
}

// HasMgmtSytemIpsMap returns a boolean if a field has been set.
func (o *ResourceGroup) HasMgmtSytemIpsMap() bool {
	if o != nil && !isNil(o.MgmtSytemIpsMap) {
		return true
	}

	return false
}

// SetMgmtSytemIpsMap gets a reference to the given map[string]string and assigns it to the MgmtSytemIpsMap field.
func (o *ResourceGroup) SetMgmtSytemIpsMap(v map[string]string) {
	o.MgmtSytemIpsMap = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResourceGroup) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResourceGroup) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResourceGroup) SetName(v string) {
	o.Name = &v
}

// GetSiteIds returns the SiteIds field value if set, zero value otherwise.
func (o *ResourceGroup) GetSiteIds() []int64 {
	if o == nil || isNil(o.SiteIds) {
		var ret []int64
		return ret
	}
	return o.SiteIds
}

// GetSiteIdsOk returns a tuple with the SiteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetSiteIdsOk() ([]int64, bool) {
	if o == nil || isNil(o.SiteIds) {
    return nil, false
	}
	return o.SiteIds, true
}

// HasSiteIds returns a boolean if a field has been set.
func (o *ResourceGroup) HasSiteIds() bool {
	if o != nil && !isNil(o.SiteIds) {
		return true
	}

	return false
}

// SetSiteIds gets a reference to the given []int64 and assigns it to the SiteIds field.
func (o *ResourceGroup) SetSiteIds(v []int64) {
	o.SiteIds = v
}

// GetUuidSytemIpsMap returns the UuidSytemIpsMap field value if set, zero value otherwise.
func (o *ResourceGroup) GetUuidSytemIpsMap() map[string]string {
	if o == nil || isNil(o.UuidSytemIpsMap) {
		var ret map[string]string
		return ret
	}
	return *o.UuidSytemIpsMap
}

// GetUuidSytemIpsMapOk returns a tuple with the UuidSytemIpsMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetUuidSytemIpsMapOk() (*map[string]string, bool) {
	if o == nil || isNil(o.UuidSytemIpsMap) {
    return nil, false
	}
	return o.UuidSytemIpsMap, true
}

// HasUuidSytemIpsMap returns a boolean if a field has been set.
func (o *ResourceGroup) HasUuidSytemIpsMap() bool {
	if o != nil && !isNil(o.UuidSytemIpsMap) {
		return true
	}

	return false
}

// SetUuidSytemIpsMap gets a reference to the given map[string]string and assigns it to the UuidSytemIpsMap field.
func (o *ResourceGroup) SetUuidSytemIpsMap(v map[string]string) {
	o.UuidSytemIpsMap = &v
}

func (o ResourceGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !isNil(o.DeviceIPs) {
		toSerialize["deviceIPs"] = o.DeviceIPs
	}
	if !isNil(o.DeviceIps) {
		toSerialize["deviceIps"] = o.DeviceIps
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.MgmtSytemIpsMap) {
		toSerialize["mgmtSytemIpsMap"] = o.MgmtSytemIpsMap
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.SiteIds) {
		toSerialize["siteIds"] = o.SiteIds
	}
	if !isNil(o.UuidSytemIpsMap) {
		toSerialize["uuidSytemIpsMap"] = o.UuidSytemIpsMap
	}
	return json.Marshal(toSerialize)
}

type NullableResourceGroup struct {
	value *ResourceGroup
	isSet bool
}

func (v NullableResourceGroup) Get() *ResourceGroup {
	return v.value
}

func (v *NullableResourceGroup) Set(val *ResourceGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceGroup(val *ResourceGroup) *NullableResourceGroup {
	return &NullableResourceGroup{value: val, isSet: true}
}

func (v NullableResourceGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


