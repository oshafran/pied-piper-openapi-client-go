/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CellularProfile struct for CellularProfile
type CellularProfile struct {
	Apn *string `json:"apn,omitempty"`
	AuthMethod *string `json:"authMethod,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Password *string `json:"password,omitempty"`
	PdnType *string `json:"pdnType,omitempty"`
	UserName *string `json:"userName,omitempty"`
}

// NewCellularProfile instantiates a new CellularProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCellularProfile() *CellularProfile {
	this := CellularProfile{}
	return &this
}

// NewCellularProfileWithDefaults instantiates a new CellularProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCellularProfileWithDefaults() *CellularProfile {
	this := CellularProfile{}
	return &this
}

// GetApn returns the Apn field value if set, zero value otherwise.
func (o *CellularProfile) GetApn() string {
	if o == nil || isNil(o.Apn) {
		var ret string
		return ret
	}
	return *o.Apn
}

// GetApnOk returns a tuple with the Apn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellularProfile) GetApnOk() (*string, bool) {
	if o == nil || isNil(o.Apn) {
    return nil, false
	}
	return o.Apn, true
}

// HasApn returns a boolean if a field has been set.
func (o *CellularProfile) HasApn() bool {
	if o != nil && !isNil(o.Apn) {
		return true
	}

	return false
}

// SetApn gets a reference to the given string and assigns it to the Apn field.
func (o *CellularProfile) SetApn(v string) {
	o.Apn = &v
}

// GetAuthMethod returns the AuthMethod field value if set, zero value otherwise.
func (o *CellularProfile) GetAuthMethod() string {
	if o == nil || isNil(o.AuthMethod) {
		var ret string
		return ret
	}
	return *o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellularProfile) GetAuthMethodOk() (*string, bool) {
	if o == nil || isNil(o.AuthMethod) {
    return nil, false
	}
	return o.AuthMethod, true
}

// HasAuthMethod returns a boolean if a field has been set.
func (o *CellularProfile) HasAuthMethod() bool {
	if o != nil && !isNil(o.AuthMethod) {
		return true
	}

	return false
}

// SetAuthMethod gets a reference to the given string and assigns it to the AuthMethod field.
func (o *CellularProfile) SetAuthMethod(v string) {
	o.AuthMethod = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CellularProfile) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellularProfile) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CellularProfile) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CellularProfile) SetId(v int32) {
	o.Id = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CellularProfile) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellularProfile) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CellularProfile) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CellularProfile) SetPassword(v string) {
	o.Password = &v
}

// GetPdnType returns the PdnType field value if set, zero value otherwise.
func (o *CellularProfile) GetPdnType() string {
	if o == nil || isNil(o.PdnType) {
		var ret string
		return ret
	}
	return *o.PdnType
}

// GetPdnTypeOk returns a tuple with the PdnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellularProfile) GetPdnTypeOk() (*string, bool) {
	if o == nil || isNil(o.PdnType) {
    return nil, false
	}
	return o.PdnType, true
}

// HasPdnType returns a boolean if a field has been set.
func (o *CellularProfile) HasPdnType() bool {
	if o != nil && !isNil(o.PdnType) {
		return true
	}

	return false
}

// SetPdnType gets a reference to the given string and assigns it to the PdnType field.
func (o *CellularProfile) SetPdnType(v string) {
	o.PdnType = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *CellularProfile) GetUserName() string {
	if o == nil || isNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CellularProfile) GetUserNameOk() (*string, bool) {
	if o == nil || isNil(o.UserName) {
    return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *CellularProfile) HasUserName() bool {
	if o != nil && !isNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *CellularProfile) SetUserName(v string) {
	o.UserName = &v
}

func (o CellularProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Apn) {
		toSerialize["apn"] = o.Apn
	}
	if !isNil(o.AuthMethod) {
		toSerialize["authMethod"] = o.AuthMethod
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.PdnType) {
		toSerialize["pdnType"] = o.PdnType
	}
	if !isNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	return json.Marshal(toSerialize)
}

type NullableCellularProfile struct {
	value *CellularProfile
	isSet bool
}

func (v NullableCellularProfile) Get() *CellularProfile {
	return v.value
}

func (v *NullableCellularProfile) Set(val *CellularProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableCellularProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableCellularProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCellularProfile(val *CellularProfile) *NullableCellularProfile {
	return &NullableCellularProfile{value: val, isSet: true}
}

func (v NullableCellularProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCellularProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


