/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VEdgeBootstrapConfig struct for VEdgeBootstrapConfig
type VEdgeBootstrapConfig struct {
	BootstrapConfigType *string `json:"bootstrapConfigType,omitempty"`
	Uuid []string `json:"uuid,omitempty"`
}

// NewVEdgeBootstrapConfig instantiates a new VEdgeBootstrapConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVEdgeBootstrapConfig() *VEdgeBootstrapConfig {
	this := VEdgeBootstrapConfig{}
	return &this
}

// NewVEdgeBootstrapConfigWithDefaults instantiates a new VEdgeBootstrapConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVEdgeBootstrapConfigWithDefaults() *VEdgeBootstrapConfig {
	this := VEdgeBootstrapConfig{}
	return &this
}

// GetBootstrapConfigType returns the BootstrapConfigType field value if set, zero value otherwise.
func (o *VEdgeBootstrapConfig) GetBootstrapConfigType() string {
	if o == nil || isNil(o.BootstrapConfigType) {
		var ret string
		return ret
	}
	return *o.BootstrapConfigType
}

// GetBootstrapConfigTypeOk returns a tuple with the BootstrapConfigType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VEdgeBootstrapConfig) GetBootstrapConfigTypeOk() (*string, bool) {
	if o == nil || isNil(o.BootstrapConfigType) {
    return nil, false
	}
	return o.BootstrapConfigType, true
}

// HasBootstrapConfigType returns a boolean if a field has been set.
func (o *VEdgeBootstrapConfig) HasBootstrapConfigType() bool {
	if o != nil && !isNil(o.BootstrapConfigType) {
		return true
	}

	return false
}

// SetBootstrapConfigType gets a reference to the given string and assigns it to the BootstrapConfigType field.
func (o *VEdgeBootstrapConfig) SetBootstrapConfigType(v string) {
	o.BootstrapConfigType = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *VEdgeBootstrapConfig) GetUuid() []string {
	if o == nil || isNil(o.Uuid) {
		var ret []string
		return ret
	}
	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VEdgeBootstrapConfig) GetUuidOk() ([]string, bool) {
	if o == nil || isNil(o.Uuid) {
    return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *VEdgeBootstrapConfig) HasUuid() bool {
	if o != nil && !isNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given []string and assigns it to the Uuid field.
func (o *VEdgeBootstrapConfig) SetUuid(v []string) {
	o.Uuid = v
}

func (o VEdgeBootstrapConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BootstrapConfigType) {
		toSerialize["bootstrapConfigType"] = o.BootstrapConfigType
	}
	if !isNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableVEdgeBootstrapConfig struct {
	value *VEdgeBootstrapConfig
	isSet bool
}

func (v NullableVEdgeBootstrapConfig) Get() *VEdgeBootstrapConfig {
	return v.value
}

func (v *NullableVEdgeBootstrapConfig) Set(val *VEdgeBootstrapConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVEdgeBootstrapConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVEdgeBootstrapConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVEdgeBootstrapConfig(val *VEdgeBootstrapConfig) *NullableVEdgeBootstrapConfig {
	return &NullableVEdgeBootstrapConfig{value: val, isSet: true}
}

func (v NullableVEdgeBootstrapConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVEdgeBootstrapConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


