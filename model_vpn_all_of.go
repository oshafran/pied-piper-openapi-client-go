/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VpnAllOf struct for VpnAllOf
type VpnAllOf struct {
	SiteToSiteVpn *SiteToSiteVpn `json:"siteToSiteVpn,omitempty"`
	IpSecPolicy *IpSecPolicy `json:"ipSecPolicy,omitempty"`
}

// NewVpnAllOf instantiates a new VpnAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpnAllOf() *VpnAllOf {
	this := VpnAllOf{}
	return &this
}

// NewVpnAllOfWithDefaults instantiates a new VpnAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpnAllOfWithDefaults() *VpnAllOf {
	this := VpnAllOf{}
	return &this
}

// GetSiteToSiteVpn returns the SiteToSiteVpn field value if set, zero value otherwise.
func (o *VpnAllOf) GetSiteToSiteVpn() SiteToSiteVpn {
	if o == nil || o.SiteToSiteVpn == nil {
		var ret SiteToSiteVpn
		return ret
	}
	return *o.SiteToSiteVpn
}

// GetSiteToSiteVpnOk returns a tuple with the SiteToSiteVpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnAllOf) GetSiteToSiteVpnOk() (*SiteToSiteVpn, bool) {
	if o == nil || o.SiteToSiteVpn == nil {
		return nil, false
	}
	return o.SiteToSiteVpn, true
}

// HasSiteToSiteVpn returns a boolean if a field has been set.
func (o *VpnAllOf) HasSiteToSiteVpn() bool {
	if o != nil && o.SiteToSiteVpn != nil {
		return true
	}

	return false
}

// SetSiteToSiteVpn gets a reference to the given SiteToSiteVpn and assigns it to the SiteToSiteVpn field.
func (o *VpnAllOf) SetSiteToSiteVpn(v SiteToSiteVpn) {
	o.SiteToSiteVpn = &v
}

// GetIpSecPolicy returns the IpSecPolicy field value if set, zero value otherwise.
func (o *VpnAllOf) GetIpSecPolicy() IpSecPolicy {
	if o == nil || o.IpSecPolicy == nil {
		var ret IpSecPolicy
		return ret
	}
	return *o.IpSecPolicy
}

// GetIpSecPolicyOk returns a tuple with the IpSecPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnAllOf) GetIpSecPolicyOk() (*IpSecPolicy, bool) {
	if o == nil || o.IpSecPolicy == nil {
		return nil, false
	}
	return o.IpSecPolicy, true
}

// HasIpSecPolicy returns a boolean if a field has been set.
func (o *VpnAllOf) HasIpSecPolicy() bool {
	if o != nil && o.IpSecPolicy != nil {
		return true
	}

	return false
}

// SetIpSecPolicy gets a reference to the given IpSecPolicy and assigns it to the IpSecPolicy field.
func (o *VpnAllOf) SetIpSecPolicy(v IpSecPolicy) {
	o.IpSecPolicy = &v
}

func (o VpnAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SiteToSiteVpn != nil {
		toSerialize["siteToSiteVpn"] = o.SiteToSiteVpn
	}
	if o.IpSecPolicy != nil {
		toSerialize["ipSecPolicy"] = o.IpSecPolicy
	}
	return json.Marshal(toSerialize)
}

type NullableVpnAllOf struct {
	value *VpnAllOf
	isSet bool
}

func (v NullableVpnAllOf) Get() *VpnAllOf {
	return v.value
}

func (v *NullableVpnAllOf) Set(val *VpnAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnAllOf(val *VpnAllOf) *NullableVpnAllOf {
	return &NullableVpnAllOf{value: val, isSet: true}
}

func (v NullableVpnAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


