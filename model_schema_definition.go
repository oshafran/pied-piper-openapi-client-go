/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SchemaDefinition struct for SchemaDefinition
type SchemaDefinition struct {
	CountOfUniqueuVertexAndEdgeObjectsCreated *int32 `json:"countOfUniqueuVertexAndEdgeObjectsCreated,omitempty"`
	CountOfVertexAndEdgesRegisteredWithDeviceDataManager *int32 `json:"countOfVertexAndEdgesRegisteredWithDeviceDataManager,omitempty"`
	VertexDefinitionsForDataCollection []string `json:"vertexDefinitionsForDataCollection,omitempty"`
	VertexDefinitionsFoundInDBWithData []VertexDefinition `json:"vertexDefinitionsFoundInDBWithData,omitempty"`
	VertexDefinitionsFoundInDBWithoutData []string `json:"vertexDefinitionsFoundInDBWithoutData,omitempty"`
	VertexDefinitionsNotFoundInDB []string `json:"vertexDefinitionsNotFoundInDB,omitempty"`
	VertexDefinitionsNotRegisteredWithDeviceDataManager []string `json:"vertexDefinitionsNotRegisteredWithDeviceDataManager,omitempty"`
}

// NewSchemaDefinition instantiates a new SchemaDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemaDefinition() *SchemaDefinition {
	this := SchemaDefinition{}
	return &this
}

// NewSchemaDefinitionWithDefaults instantiates a new SchemaDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemaDefinitionWithDefaults() *SchemaDefinition {
	this := SchemaDefinition{}
	return &this
}

// GetCountOfUniqueuVertexAndEdgeObjectsCreated returns the CountOfUniqueuVertexAndEdgeObjectsCreated field value if set, zero value otherwise.
func (o *SchemaDefinition) GetCountOfUniqueuVertexAndEdgeObjectsCreated() int32 {
	if o == nil || isNil(o.CountOfUniqueuVertexAndEdgeObjectsCreated) {
		var ret int32
		return ret
	}
	return *o.CountOfUniqueuVertexAndEdgeObjectsCreated
}

// GetCountOfUniqueuVertexAndEdgeObjectsCreatedOk returns a tuple with the CountOfUniqueuVertexAndEdgeObjectsCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDefinition) GetCountOfUniqueuVertexAndEdgeObjectsCreatedOk() (*int32, bool) {
	if o == nil || isNil(o.CountOfUniqueuVertexAndEdgeObjectsCreated) {
    return nil, false
	}
	return o.CountOfUniqueuVertexAndEdgeObjectsCreated, true
}

// HasCountOfUniqueuVertexAndEdgeObjectsCreated returns a boolean if a field has been set.
func (o *SchemaDefinition) HasCountOfUniqueuVertexAndEdgeObjectsCreated() bool {
	if o != nil && !isNil(o.CountOfUniqueuVertexAndEdgeObjectsCreated) {
		return true
	}

	return false
}

// SetCountOfUniqueuVertexAndEdgeObjectsCreated gets a reference to the given int32 and assigns it to the CountOfUniqueuVertexAndEdgeObjectsCreated field.
func (o *SchemaDefinition) SetCountOfUniqueuVertexAndEdgeObjectsCreated(v int32) {
	o.CountOfUniqueuVertexAndEdgeObjectsCreated = &v
}

// GetCountOfVertexAndEdgesRegisteredWithDeviceDataManager returns the CountOfVertexAndEdgesRegisteredWithDeviceDataManager field value if set, zero value otherwise.
func (o *SchemaDefinition) GetCountOfVertexAndEdgesRegisteredWithDeviceDataManager() int32 {
	if o == nil || isNil(o.CountOfVertexAndEdgesRegisteredWithDeviceDataManager) {
		var ret int32
		return ret
	}
	return *o.CountOfVertexAndEdgesRegisteredWithDeviceDataManager
}

// GetCountOfVertexAndEdgesRegisteredWithDeviceDataManagerOk returns a tuple with the CountOfVertexAndEdgesRegisteredWithDeviceDataManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDefinition) GetCountOfVertexAndEdgesRegisteredWithDeviceDataManagerOk() (*int32, bool) {
	if o == nil || isNil(o.CountOfVertexAndEdgesRegisteredWithDeviceDataManager) {
    return nil, false
	}
	return o.CountOfVertexAndEdgesRegisteredWithDeviceDataManager, true
}

// HasCountOfVertexAndEdgesRegisteredWithDeviceDataManager returns a boolean if a field has been set.
func (o *SchemaDefinition) HasCountOfVertexAndEdgesRegisteredWithDeviceDataManager() bool {
	if o != nil && !isNil(o.CountOfVertexAndEdgesRegisteredWithDeviceDataManager) {
		return true
	}

	return false
}

// SetCountOfVertexAndEdgesRegisteredWithDeviceDataManager gets a reference to the given int32 and assigns it to the CountOfVertexAndEdgesRegisteredWithDeviceDataManager field.
func (o *SchemaDefinition) SetCountOfVertexAndEdgesRegisteredWithDeviceDataManager(v int32) {
	o.CountOfVertexAndEdgesRegisteredWithDeviceDataManager = &v
}

// GetVertexDefinitionsForDataCollection returns the VertexDefinitionsForDataCollection field value if set, zero value otherwise.
func (o *SchemaDefinition) GetVertexDefinitionsForDataCollection() []string {
	if o == nil || isNil(o.VertexDefinitionsForDataCollection) {
		var ret []string
		return ret
	}
	return o.VertexDefinitionsForDataCollection
}

// GetVertexDefinitionsForDataCollectionOk returns a tuple with the VertexDefinitionsForDataCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDefinition) GetVertexDefinitionsForDataCollectionOk() ([]string, bool) {
	if o == nil || isNil(o.VertexDefinitionsForDataCollection) {
    return nil, false
	}
	return o.VertexDefinitionsForDataCollection, true
}

// HasVertexDefinitionsForDataCollection returns a boolean if a field has been set.
func (o *SchemaDefinition) HasVertexDefinitionsForDataCollection() bool {
	if o != nil && !isNil(o.VertexDefinitionsForDataCollection) {
		return true
	}

	return false
}

// SetVertexDefinitionsForDataCollection gets a reference to the given []string and assigns it to the VertexDefinitionsForDataCollection field.
func (o *SchemaDefinition) SetVertexDefinitionsForDataCollection(v []string) {
	o.VertexDefinitionsForDataCollection = v
}

// GetVertexDefinitionsFoundInDBWithData returns the VertexDefinitionsFoundInDBWithData field value if set, zero value otherwise.
func (o *SchemaDefinition) GetVertexDefinitionsFoundInDBWithData() []VertexDefinition {
	if o == nil || isNil(o.VertexDefinitionsFoundInDBWithData) {
		var ret []VertexDefinition
		return ret
	}
	return o.VertexDefinitionsFoundInDBWithData
}

// GetVertexDefinitionsFoundInDBWithDataOk returns a tuple with the VertexDefinitionsFoundInDBWithData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDefinition) GetVertexDefinitionsFoundInDBWithDataOk() ([]VertexDefinition, bool) {
	if o == nil || isNil(o.VertexDefinitionsFoundInDBWithData) {
    return nil, false
	}
	return o.VertexDefinitionsFoundInDBWithData, true
}

// HasVertexDefinitionsFoundInDBWithData returns a boolean if a field has been set.
func (o *SchemaDefinition) HasVertexDefinitionsFoundInDBWithData() bool {
	if o != nil && !isNil(o.VertexDefinitionsFoundInDBWithData) {
		return true
	}

	return false
}

// SetVertexDefinitionsFoundInDBWithData gets a reference to the given []VertexDefinition and assigns it to the VertexDefinitionsFoundInDBWithData field.
func (o *SchemaDefinition) SetVertexDefinitionsFoundInDBWithData(v []VertexDefinition) {
	o.VertexDefinitionsFoundInDBWithData = v
}

// GetVertexDefinitionsFoundInDBWithoutData returns the VertexDefinitionsFoundInDBWithoutData field value if set, zero value otherwise.
func (o *SchemaDefinition) GetVertexDefinitionsFoundInDBWithoutData() []string {
	if o == nil || isNil(o.VertexDefinitionsFoundInDBWithoutData) {
		var ret []string
		return ret
	}
	return o.VertexDefinitionsFoundInDBWithoutData
}

// GetVertexDefinitionsFoundInDBWithoutDataOk returns a tuple with the VertexDefinitionsFoundInDBWithoutData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDefinition) GetVertexDefinitionsFoundInDBWithoutDataOk() ([]string, bool) {
	if o == nil || isNil(o.VertexDefinitionsFoundInDBWithoutData) {
    return nil, false
	}
	return o.VertexDefinitionsFoundInDBWithoutData, true
}

// HasVertexDefinitionsFoundInDBWithoutData returns a boolean if a field has been set.
func (o *SchemaDefinition) HasVertexDefinitionsFoundInDBWithoutData() bool {
	if o != nil && !isNil(o.VertexDefinitionsFoundInDBWithoutData) {
		return true
	}

	return false
}

// SetVertexDefinitionsFoundInDBWithoutData gets a reference to the given []string and assigns it to the VertexDefinitionsFoundInDBWithoutData field.
func (o *SchemaDefinition) SetVertexDefinitionsFoundInDBWithoutData(v []string) {
	o.VertexDefinitionsFoundInDBWithoutData = v
}

// GetVertexDefinitionsNotFoundInDB returns the VertexDefinitionsNotFoundInDB field value if set, zero value otherwise.
func (o *SchemaDefinition) GetVertexDefinitionsNotFoundInDB() []string {
	if o == nil || isNil(o.VertexDefinitionsNotFoundInDB) {
		var ret []string
		return ret
	}
	return o.VertexDefinitionsNotFoundInDB
}

// GetVertexDefinitionsNotFoundInDBOk returns a tuple with the VertexDefinitionsNotFoundInDB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDefinition) GetVertexDefinitionsNotFoundInDBOk() ([]string, bool) {
	if o == nil || isNil(o.VertexDefinitionsNotFoundInDB) {
    return nil, false
	}
	return o.VertexDefinitionsNotFoundInDB, true
}

// HasVertexDefinitionsNotFoundInDB returns a boolean if a field has been set.
func (o *SchemaDefinition) HasVertexDefinitionsNotFoundInDB() bool {
	if o != nil && !isNil(o.VertexDefinitionsNotFoundInDB) {
		return true
	}

	return false
}

// SetVertexDefinitionsNotFoundInDB gets a reference to the given []string and assigns it to the VertexDefinitionsNotFoundInDB field.
func (o *SchemaDefinition) SetVertexDefinitionsNotFoundInDB(v []string) {
	o.VertexDefinitionsNotFoundInDB = v
}

// GetVertexDefinitionsNotRegisteredWithDeviceDataManager returns the VertexDefinitionsNotRegisteredWithDeviceDataManager field value if set, zero value otherwise.
func (o *SchemaDefinition) GetVertexDefinitionsNotRegisteredWithDeviceDataManager() []string {
	if o == nil || isNil(o.VertexDefinitionsNotRegisteredWithDeviceDataManager) {
		var ret []string
		return ret
	}
	return o.VertexDefinitionsNotRegisteredWithDeviceDataManager
}

// GetVertexDefinitionsNotRegisteredWithDeviceDataManagerOk returns a tuple with the VertexDefinitionsNotRegisteredWithDeviceDataManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaDefinition) GetVertexDefinitionsNotRegisteredWithDeviceDataManagerOk() ([]string, bool) {
	if o == nil || isNil(o.VertexDefinitionsNotRegisteredWithDeviceDataManager) {
    return nil, false
	}
	return o.VertexDefinitionsNotRegisteredWithDeviceDataManager, true
}

// HasVertexDefinitionsNotRegisteredWithDeviceDataManager returns a boolean if a field has been set.
func (o *SchemaDefinition) HasVertexDefinitionsNotRegisteredWithDeviceDataManager() bool {
	if o != nil && !isNil(o.VertexDefinitionsNotRegisteredWithDeviceDataManager) {
		return true
	}

	return false
}

// SetVertexDefinitionsNotRegisteredWithDeviceDataManager gets a reference to the given []string and assigns it to the VertexDefinitionsNotRegisteredWithDeviceDataManager field.
func (o *SchemaDefinition) SetVertexDefinitionsNotRegisteredWithDeviceDataManager(v []string) {
	o.VertexDefinitionsNotRegisteredWithDeviceDataManager = v
}

func (o SchemaDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CountOfUniqueuVertexAndEdgeObjectsCreated) {
		toSerialize["countOfUniqueuVertexAndEdgeObjectsCreated"] = o.CountOfUniqueuVertexAndEdgeObjectsCreated
	}
	if !isNil(o.CountOfVertexAndEdgesRegisteredWithDeviceDataManager) {
		toSerialize["countOfVertexAndEdgesRegisteredWithDeviceDataManager"] = o.CountOfVertexAndEdgesRegisteredWithDeviceDataManager
	}
	if !isNil(o.VertexDefinitionsForDataCollection) {
		toSerialize["vertexDefinitionsForDataCollection"] = o.VertexDefinitionsForDataCollection
	}
	if !isNil(o.VertexDefinitionsFoundInDBWithData) {
		toSerialize["vertexDefinitionsFoundInDBWithData"] = o.VertexDefinitionsFoundInDBWithData
	}
	if !isNil(o.VertexDefinitionsFoundInDBWithoutData) {
		toSerialize["vertexDefinitionsFoundInDBWithoutData"] = o.VertexDefinitionsFoundInDBWithoutData
	}
	if !isNil(o.VertexDefinitionsNotFoundInDB) {
		toSerialize["vertexDefinitionsNotFoundInDB"] = o.VertexDefinitionsNotFoundInDB
	}
	if !isNil(o.VertexDefinitionsNotRegisteredWithDeviceDataManager) {
		toSerialize["vertexDefinitionsNotRegisteredWithDeviceDataManager"] = o.VertexDefinitionsNotRegisteredWithDeviceDataManager
	}
	return json.Marshal(toSerialize)
}

type NullableSchemaDefinition struct {
	value *SchemaDefinition
	isSet bool
}

func (v NullableSchemaDefinition) Get() *SchemaDefinition {
	return v.value
}

func (v *NullableSchemaDefinition) Set(val *SchemaDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemaDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemaDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemaDefinition(val *SchemaDefinition) *NullableSchemaDefinition {
	return &NullableSchemaDefinition{value: val, isSet: true}
}

func (v NullableSchemaDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemaDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


