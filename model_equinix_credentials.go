/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EquinixCredentials struct for EquinixCredentials
type EquinixCredentials struct {
	ClientId *string `json:"clientId,omitempty"`
	ClientSecret *string `json:"clientSecret,omitempty"`
}

// NewEquinixCredentials instantiates a new EquinixCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEquinixCredentials() *EquinixCredentials {
	this := EquinixCredentials{}
	return &this
}

// NewEquinixCredentialsWithDefaults instantiates a new EquinixCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEquinixCredentialsWithDefaults() *EquinixCredentials {
	this := EquinixCredentials{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *EquinixCredentials) GetClientId() string {
	if o == nil || isNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquinixCredentials) GetClientIdOk() (*string, bool) {
	if o == nil || isNil(o.ClientId) {
    return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *EquinixCredentials) HasClientId() bool {
	if o != nil && !isNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *EquinixCredentials) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *EquinixCredentials) GetClientSecret() string {
	if o == nil || isNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquinixCredentials) GetClientSecretOk() (*string, bool) {
	if o == nil || isNil(o.ClientSecret) {
    return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *EquinixCredentials) HasClientSecret() bool {
	if o != nil && !isNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *EquinixCredentials) SetClientSecret(v string) {
	o.ClientSecret = &v
}

func (o EquinixCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !isNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	return json.Marshal(toSerialize)
}

type NullableEquinixCredentials struct {
	value *EquinixCredentials
	isSet bool
}

func (v NullableEquinixCredentials) Get() *EquinixCredentials {
	return v.value
}

func (v *NullableEquinixCredentials) Set(val *EquinixCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableEquinixCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableEquinixCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEquinixCredentials(val *EquinixCredentials) *NullableEquinixCredentials {
	return &NullableEquinixCredentials{value: val, isSet: true}
}

func (v NullableEquinixCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEquinixCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


