/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LoginAccessToRouter struct for LoginAccessToRouter
type LoginAccessToRouter struct {
	AuthenticationOrder *string `json:"authenticationOrder,omitempty"`
	LocalPassword *string `json:"localPassword,omitempty"`
	LocalUser *string `json:"localUser,omitempty"`
}

// NewLoginAccessToRouter instantiates a new LoginAccessToRouter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginAccessToRouter() *LoginAccessToRouter {
	this := LoginAccessToRouter{}
	return &this
}

// NewLoginAccessToRouterWithDefaults instantiates a new LoginAccessToRouter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginAccessToRouterWithDefaults() *LoginAccessToRouter {
	this := LoginAccessToRouter{}
	return &this
}

// GetAuthenticationOrder returns the AuthenticationOrder field value if set, zero value otherwise.
func (o *LoginAccessToRouter) GetAuthenticationOrder() string {
	if o == nil || o.AuthenticationOrder == nil {
		var ret string
		return ret
	}
	return *o.AuthenticationOrder
}

// GetAuthenticationOrderOk returns a tuple with the AuthenticationOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginAccessToRouter) GetAuthenticationOrderOk() (*string, bool) {
	if o == nil || o.AuthenticationOrder == nil {
		return nil, false
	}
	return o.AuthenticationOrder, true
}

// HasAuthenticationOrder returns a boolean if a field has been set.
func (o *LoginAccessToRouter) HasAuthenticationOrder() bool {
	if o != nil && o.AuthenticationOrder != nil {
		return true
	}

	return false
}

// SetAuthenticationOrder gets a reference to the given string and assigns it to the AuthenticationOrder field.
func (o *LoginAccessToRouter) SetAuthenticationOrder(v string) {
	o.AuthenticationOrder = &v
}

// GetLocalPassword returns the LocalPassword field value if set, zero value otherwise.
func (o *LoginAccessToRouter) GetLocalPassword() string {
	if o == nil || o.LocalPassword == nil {
		var ret string
		return ret
	}
	return *o.LocalPassword
}

// GetLocalPasswordOk returns a tuple with the LocalPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginAccessToRouter) GetLocalPasswordOk() (*string, bool) {
	if o == nil || o.LocalPassword == nil {
		return nil, false
	}
	return o.LocalPassword, true
}

// HasLocalPassword returns a boolean if a field has been set.
func (o *LoginAccessToRouter) HasLocalPassword() bool {
	if o != nil && o.LocalPassword != nil {
		return true
	}

	return false
}

// SetLocalPassword gets a reference to the given string and assigns it to the LocalPassword field.
func (o *LoginAccessToRouter) SetLocalPassword(v string) {
	o.LocalPassword = &v
}

// GetLocalUser returns the LocalUser field value if set, zero value otherwise.
func (o *LoginAccessToRouter) GetLocalUser() string {
	if o == nil || o.LocalUser == nil {
		var ret string
		return ret
	}
	return *o.LocalUser
}

// GetLocalUserOk returns a tuple with the LocalUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginAccessToRouter) GetLocalUserOk() (*string, bool) {
	if o == nil || o.LocalUser == nil {
		return nil, false
	}
	return o.LocalUser, true
}

// HasLocalUser returns a boolean if a field has been set.
func (o *LoginAccessToRouter) HasLocalUser() bool {
	if o != nil && o.LocalUser != nil {
		return true
	}

	return false
}

// SetLocalUser gets a reference to the given string and assigns it to the LocalUser field.
func (o *LoginAccessToRouter) SetLocalUser(v string) {
	o.LocalUser = &v
}

func (o LoginAccessToRouter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthenticationOrder != nil {
		toSerialize["authenticationOrder"] = o.AuthenticationOrder
	}
	if o.LocalPassword != nil {
		toSerialize["localPassword"] = o.LocalPassword
	}
	if o.LocalUser != nil {
		toSerialize["localUser"] = o.LocalUser
	}
	return json.Marshal(toSerialize)
}

type NullableLoginAccessToRouter struct {
	value *LoginAccessToRouter
	isSet bool
}

func (v NullableLoginAccessToRouter) Get() *LoginAccessToRouter {
	return v.value
}

func (v *NullableLoginAccessToRouter) Set(val *LoginAccessToRouter) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginAccessToRouter) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginAccessToRouter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginAccessToRouter(val *LoginAccessToRouter) *NullableLoginAccessToRouter {
	return &NullableLoginAccessToRouter{value: val, isSet: true}
}

func (v NullableLoginAccessToRouter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginAccessToRouter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


