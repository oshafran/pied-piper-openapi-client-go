/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DataCenterRegistration struct for DataCenterRegistration
type DataCenterRegistration struct {
	ClusterEncKey *string `json:"clusterEncKey,omitempty"`
	ClusterEnvKey *string `json:"clusterEnvKey,omitempty"`
	DataCenters []DataCenter `json:"dataCenters,omitempty"`
	DisasterRecoverySettings *DisasterRecoverySettings `json:"disasterRecoverySettings,omitempty"`
	Host *Host `json:"host,omitempty"`
	Vbonds []Node `json:"vbonds,omitempty"`
	VmanageRootCA *string `json:"vmanageRootCA,omitempty"`
}

// NewDataCenterRegistration instantiates a new DataCenterRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataCenterRegistration() *DataCenterRegistration {
	this := DataCenterRegistration{}
	return &this
}

// NewDataCenterRegistrationWithDefaults instantiates a new DataCenterRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataCenterRegistrationWithDefaults() *DataCenterRegistration {
	this := DataCenterRegistration{}
	return &this
}

// GetClusterEncKey returns the ClusterEncKey field value if set, zero value otherwise.
func (o *DataCenterRegistration) GetClusterEncKey() string {
	if o == nil || o.ClusterEncKey == nil {
		var ret string
		return ret
	}
	return *o.ClusterEncKey
}

// GetClusterEncKeyOk returns a tuple with the ClusterEncKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterRegistration) GetClusterEncKeyOk() (*string, bool) {
	if o == nil || o.ClusterEncKey == nil {
		return nil, false
	}
	return o.ClusterEncKey, true
}

// HasClusterEncKey returns a boolean if a field has been set.
func (o *DataCenterRegistration) HasClusterEncKey() bool {
	if o != nil && o.ClusterEncKey != nil {
		return true
	}

	return false
}

// SetClusterEncKey gets a reference to the given string and assigns it to the ClusterEncKey field.
func (o *DataCenterRegistration) SetClusterEncKey(v string) {
	o.ClusterEncKey = &v
}

// GetClusterEnvKey returns the ClusterEnvKey field value if set, zero value otherwise.
func (o *DataCenterRegistration) GetClusterEnvKey() string {
	if o == nil || o.ClusterEnvKey == nil {
		var ret string
		return ret
	}
	return *o.ClusterEnvKey
}

// GetClusterEnvKeyOk returns a tuple with the ClusterEnvKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterRegistration) GetClusterEnvKeyOk() (*string, bool) {
	if o == nil || o.ClusterEnvKey == nil {
		return nil, false
	}
	return o.ClusterEnvKey, true
}

// HasClusterEnvKey returns a boolean if a field has been set.
func (o *DataCenterRegistration) HasClusterEnvKey() bool {
	if o != nil && o.ClusterEnvKey != nil {
		return true
	}

	return false
}

// SetClusterEnvKey gets a reference to the given string and assigns it to the ClusterEnvKey field.
func (o *DataCenterRegistration) SetClusterEnvKey(v string) {
	o.ClusterEnvKey = &v
}

// GetDataCenters returns the DataCenters field value if set, zero value otherwise.
func (o *DataCenterRegistration) GetDataCenters() []DataCenter {
	if o == nil || o.DataCenters == nil {
		var ret []DataCenter
		return ret
	}
	return o.DataCenters
}

// GetDataCentersOk returns a tuple with the DataCenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterRegistration) GetDataCentersOk() ([]DataCenter, bool) {
	if o == nil || o.DataCenters == nil {
		return nil, false
	}
	return o.DataCenters, true
}

// HasDataCenters returns a boolean if a field has been set.
func (o *DataCenterRegistration) HasDataCenters() bool {
	if o != nil && o.DataCenters != nil {
		return true
	}

	return false
}

// SetDataCenters gets a reference to the given []DataCenter and assigns it to the DataCenters field.
func (o *DataCenterRegistration) SetDataCenters(v []DataCenter) {
	o.DataCenters = v
}

// GetDisasterRecoverySettings returns the DisasterRecoverySettings field value if set, zero value otherwise.
func (o *DataCenterRegistration) GetDisasterRecoverySettings() DisasterRecoverySettings {
	if o == nil || o.DisasterRecoverySettings == nil {
		var ret DisasterRecoverySettings
		return ret
	}
	return *o.DisasterRecoverySettings
}

// GetDisasterRecoverySettingsOk returns a tuple with the DisasterRecoverySettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterRegistration) GetDisasterRecoverySettingsOk() (*DisasterRecoverySettings, bool) {
	if o == nil || o.DisasterRecoverySettings == nil {
		return nil, false
	}
	return o.DisasterRecoverySettings, true
}

// HasDisasterRecoverySettings returns a boolean if a field has been set.
func (o *DataCenterRegistration) HasDisasterRecoverySettings() bool {
	if o != nil && o.DisasterRecoverySettings != nil {
		return true
	}

	return false
}

// SetDisasterRecoverySettings gets a reference to the given DisasterRecoverySettings and assigns it to the DisasterRecoverySettings field.
func (o *DataCenterRegistration) SetDisasterRecoverySettings(v DisasterRecoverySettings) {
	o.DisasterRecoverySettings = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *DataCenterRegistration) GetHost() Host {
	if o == nil || o.Host == nil {
		var ret Host
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterRegistration) GetHostOk() (*Host, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *DataCenterRegistration) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given Host and assigns it to the Host field.
func (o *DataCenterRegistration) SetHost(v Host) {
	o.Host = &v
}

// GetVbonds returns the Vbonds field value if set, zero value otherwise.
func (o *DataCenterRegistration) GetVbonds() []Node {
	if o == nil || o.Vbonds == nil {
		var ret []Node
		return ret
	}
	return o.Vbonds
}

// GetVbondsOk returns a tuple with the Vbonds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterRegistration) GetVbondsOk() ([]Node, bool) {
	if o == nil || o.Vbonds == nil {
		return nil, false
	}
	return o.Vbonds, true
}

// HasVbonds returns a boolean if a field has been set.
func (o *DataCenterRegistration) HasVbonds() bool {
	if o != nil && o.Vbonds != nil {
		return true
	}

	return false
}

// SetVbonds gets a reference to the given []Node and assigns it to the Vbonds field.
func (o *DataCenterRegistration) SetVbonds(v []Node) {
	o.Vbonds = v
}

// GetVmanageRootCA returns the VmanageRootCA field value if set, zero value otherwise.
func (o *DataCenterRegistration) GetVmanageRootCA() string {
	if o == nil || o.VmanageRootCA == nil {
		var ret string
		return ret
	}
	return *o.VmanageRootCA
}

// GetVmanageRootCAOk returns a tuple with the VmanageRootCA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterRegistration) GetVmanageRootCAOk() (*string, bool) {
	if o == nil || o.VmanageRootCA == nil {
		return nil, false
	}
	return o.VmanageRootCA, true
}

// HasVmanageRootCA returns a boolean if a field has been set.
func (o *DataCenterRegistration) HasVmanageRootCA() bool {
	if o != nil && o.VmanageRootCA != nil {
		return true
	}

	return false
}

// SetVmanageRootCA gets a reference to the given string and assigns it to the VmanageRootCA field.
func (o *DataCenterRegistration) SetVmanageRootCA(v string) {
	o.VmanageRootCA = &v
}

func (o DataCenterRegistration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterEncKey != nil {
		toSerialize["clusterEncKey"] = o.ClusterEncKey
	}
	if o.ClusterEnvKey != nil {
		toSerialize["clusterEnvKey"] = o.ClusterEnvKey
	}
	if o.DataCenters != nil {
		toSerialize["dataCenters"] = o.DataCenters
	}
	if o.DisasterRecoverySettings != nil {
		toSerialize["disasterRecoverySettings"] = o.DisasterRecoverySettings
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Vbonds != nil {
		toSerialize["vbonds"] = o.Vbonds
	}
	if o.VmanageRootCA != nil {
		toSerialize["vmanageRootCA"] = o.VmanageRootCA
	}
	return json.Marshal(toSerialize)
}

type NullableDataCenterRegistration struct {
	value *DataCenterRegistration
	isSet bool
}

func (v NullableDataCenterRegistration) Get() *DataCenterRegistration {
	return v.value
}

func (v *NullableDataCenterRegistration) Set(val *DataCenterRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableDataCenterRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableDataCenterRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataCenterRegistration(val *DataCenterRegistration) *NullableDataCenterRegistration {
	return &NullableDataCenterRegistration{value: val, isSet: true}
}

func (v NullableDataCenterRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataCenterRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


