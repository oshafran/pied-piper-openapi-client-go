/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CorporateWifi struct for CorporateWifi
type CorporateWifi struct {
	CorporateWlan *bool `json:"corporateWlan,omitempty"`
	RadiusServer *RadiusServer `json:"radiusServer,omitempty"`
	SecurityAuthType *string `json:"securityAuthType,omitempty"`
	Ssid *string `json:"ssid,omitempty"`
	Visibility *bool `json:"visibility,omitempty"`
	WpaPskKey *string `json:"wpaPskKey,omitempty"`
}

// NewCorporateWifi instantiates a new CorporateWifi object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporateWifi() *CorporateWifi {
	this := CorporateWifi{}
	return &this
}

// NewCorporateWifiWithDefaults instantiates a new CorporateWifi object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporateWifiWithDefaults() *CorporateWifi {
	this := CorporateWifi{}
	return &this
}

// GetCorporateWlan returns the CorporateWlan field value if set, zero value otherwise.
func (o *CorporateWifi) GetCorporateWlan() bool {
	if o == nil || isNil(o.CorporateWlan) {
		var ret bool
		return ret
	}
	return *o.CorporateWlan
}

// GetCorporateWlanOk returns a tuple with the CorporateWlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateWifi) GetCorporateWlanOk() (*bool, bool) {
	if o == nil || isNil(o.CorporateWlan) {
    return nil, false
	}
	return o.CorporateWlan, true
}

// HasCorporateWlan returns a boolean if a field has been set.
func (o *CorporateWifi) HasCorporateWlan() bool {
	if o != nil && !isNil(o.CorporateWlan) {
		return true
	}

	return false
}

// SetCorporateWlan gets a reference to the given bool and assigns it to the CorporateWlan field.
func (o *CorporateWifi) SetCorporateWlan(v bool) {
	o.CorporateWlan = &v
}

// GetRadiusServer returns the RadiusServer field value if set, zero value otherwise.
func (o *CorporateWifi) GetRadiusServer() RadiusServer {
	if o == nil || isNil(o.RadiusServer) {
		var ret RadiusServer
		return ret
	}
	return *o.RadiusServer
}

// GetRadiusServerOk returns a tuple with the RadiusServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateWifi) GetRadiusServerOk() (*RadiusServer, bool) {
	if o == nil || isNil(o.RadiusServer) {
    return nil, false
	}
	return o.RadiusServer, true
}

// HasRadiusServer returns a boolean if a field has been set.
func (o *CorporateWifi) HasRadiusServer() bool {
	if o != nil && !isNil(o.RadiusServer) {
		return true
	}

	return false
}

// SetRadiusServer gets a reference to the given RadiusServer and assigns it to the RadiusServer field.
func (o *CorporateWifi) SetRadiusServer(v RadiusServer) {
	o.RadiusServer = &v
}

// GetSecurityAuthType returns the SecurityAuthType field value if set, zero value otherwise.
func (o *CorporateWifi) GetSecurityAuthType() string {
	if o == nil || isNil(o.SecurityAuthType) {
		var ret string
		return ret
	}
	return *o.SecurityAuthType
}

// GetSecurityAuthTypeOk returns a tuple with the SecurityAuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateWifi) GetSecurityAuthTypeOk() (*string, bool) {
	if o == nil || isNil(o.SecurityAuthType) {
    return nil, false
	}
	return o.SecurityAuthType, true
}

// HasSecurityAuthType returns a boolean if a field has been set.
func (o *CorporateWifi) HasSecurityAuthType() bool {
	if o != nil && !isNil(o.SecurityAuthType) {
		return true
	}

	return false
}

// SetSecurityAuthType gets a reference to the given string and assigns it to the SecurityAuthType field.
func (o *CorporateWifi) SetSecurityAuthType(v string) {
	o.SecurityAuthType = &v
}

// GetSsid returns the Ssid field value if set, zero value otherwise.
func (o *CorporateWifi) GetSsid() string {
	if o == nil || isNil(o.Ssid) {
		var ret string
		return ret
	}
	return *o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateWifi) GetSsidOk() (*string, bool) {
	if o == nil || isNil(o.Ssid) {
    return nil, false
	}
	return o.Ssid, true
}

// HasSsid returns a boolean if a field has been set.
func (o *CorporateWifi) HasSsid() bool {
	if o != nil && !isNil(o.Ssid) {
		return true
	}

	return false
}

// SetSsid gets a reference to the given string and assigns it to the Ssid field.
func (o *CorporateWifi) SetSsid(v string) {
	o.Ssid = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *CorporateWifi) GetVisibility() bool {
	if o == nil || isNil(o.Visibility) {
		var ret bool
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateWifi) GetVisibilityOk() (*bool, bool) {
	if o == nil || isNil(o.Visibility) {
    return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *CorporateWifi) HasVisibility() bool {
	if o != nil && !isNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given bool and assigns it to the Visibility field.
func (o *CorporateWifi) SetVisibility(v bool) {
	o.Visibility = &v
}

// GetWpaPskKey returns the WpaPskKey field value if set, zero value otherwise.
func (o *CorporateWifi) GetWpaPskKey() string {
	if o == nil || isNil(o.WpaPskKey) {
		var ret string
		return ret
	}
	return *o.WpaPskKey
}

// GetWpaPskKeyOk returns a tuple with the WpaPskKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateWifi) GetWpaPskKeyOk() (*string, bool) {
	if o == nil || isNil(o.WpaPskKey) {
    return nil, false
	}
	return o.WpaPskKey, true
}

// HasWpaPskKey returns a boolean if a field has been set.
func (o *CorporateWifi) HasWpaPskKey() bool {
	if o != nil && !isNil(o.WpaPskKey) {
		return true
	}

	return false
}

// SetWpaPskKey gets a reference to the given string and assigns it to the WpaPskKey field.
func (o *CorporateWifi) SetWpaPskKey(v string) {
	o.WpaPskKey = &v
}

func (o CorporateWifi) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CorporateWlan) {
		toSerialize["corporateWlan"] = o.CorporateWlan
	}
	if !isNil(o.RadiusServer) {
		toSerialize["radiusServer"] = o.RadiusServer
	}
	if !isNil(o.SecurityAuthType) {
		toSerialize["securityAuthType"] = o.SecurityAuthType
	}
	if !isNil(o.Ssid) {
		toSerialize["ssid"] = o.Ssid
	}
	if !isNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !isNil(o.WpaPskKey) {
		toSerialize["wpaPskKey"] = o.WpaPskKey
	}
	return json.Marshal(toSerialize)
}

type NullableCorporateWifi struct {
	value *CorporateWifi
	isSet bool
}

func (v NullableCorporateWifi) Get() *CorporateWifi {
	return v.value
}

func (v *NullableCorporateWifi) Set(val *CorporateWifi) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporateWifi) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporateWifi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporateWifi(val *CorporateWifi) *NullableCorporateWifi {
	return &NullableCorporateWifi{value: val, isSet: true}
}

func (v NullableCorporateWifi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporateWifi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


