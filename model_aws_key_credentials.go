/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AwsKeyCredentials struct for AwsKeyCredentials
type AwsKeyCredentials struct {
	ApiKey *string `json:"apiKey,omitempty"`
	SecretKey *string `json:"secretKey,omitempty"`
}

// NewAwsKeyCredentials instantiates a new AwsKeyCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsKeyCredentials() *AwsKeyCredentials {
	this := AwsKeyCredentials{}
	return &this
}

// NewAwsKeyCredentialsWithDefaults instantiates a new AwsKeyCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsKeyCredentialsWithDefaults() *AwsKeyCredentials {
	this := AwsKeyCredentials{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *AwsKeyCredentials) GetApiKey() string {
	if o == nil || o.ApiKey == nil {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsKeyCredentials) GetApiKeyOk() (*string, bool) {
	if o == nil || o.ApiKey == nil {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *AwsKeyCredentials) HasApiKey() bool {
	if o != nil && o.ApiKey != nil {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *AwsKeyCredentials) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AwsKeyCredentials) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsKeyCredentials) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AwsKeyCredentials) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AwsKeyCredentials) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o AwsKeyCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiKey != nil {
		toSerialize["apiKey"] = o.ApiKey
	}
	if o.SecretKey != nil {
		toSerialize["secretKey"] = o.SecretKey
	}
	return json.Marshal(toSerialize)
}

type NullableAwsKeyCredentials struct {
	value *AwsKeyCredentials
	isSet bool
}

func (v NullableAwsKeyCredentials) Get() *AwsKeyCredentials {
	return v.value
}

func (v *NullableAwsKeyCredentials) Set(val *AwsKeyCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsKeyCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsKeyCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsKeyCredentials(val *AwsKeyCredentials) *NullableAwsKeyCredentials {
	return &NullableAwsKeyCredentials{value: val, isSet: true}
}

func (v NullableAwsKeyCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsKeyCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


