/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateTenantModel struct for UpdateTenantModel
type UpdateTenantModel struct {
	Desc *string `json:"desc,omitempty"`
	GetvBondAddress *string `json:"getvBondAddress,omitempty"`
	IdpMetadata *string `json:"idpMetadata,omitempty"`
	Mode *string `json:"mode,omitempty"`
	Name *string `json:"name,omitempty"`
	OldIdpMetadata *string `json:"oldIdpMetadata,omitempty"`
	SpMetadata *string `json:"spMetadata,omitempty"`
	SubDomain *string `json:"subDomain,omitempty"`
	WanEdgeForecast *string `json:"wanEdgeForecast,omitempty"`
}

// NewUpdateTenantModel instantiates a new UpdateTenantModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTenantModel() *UpdateTenantModel {
	this := UpdateTenantModel{}
	return &this
}

// NewUpdateTenantModelWithDefaults instantiates a new UpdateTenantModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTenantModelWithDefaults() *UpdateTenantModel {
	this := UpdateTenantModel{}
	return &this
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *UpdateTenantModel) GetDesc() string {
	if o == nil || o.Desc == nil {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantModel) GetDescOk() (*string, bool) {
	if o == nil || o.Desc == nil {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *UpdateTenantModel) HasDesc() bool {
	if o != nil && o.Desc != nil {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *UpdateTenantModel) SetDesc(v string) {
	o.Desc = &v
}

// GetGetvBondAddress returns the GetvBondAddress field value if set, zero value otherwise.
func (o *UpdateTenantModel) GetGetvBondAddress() string {
	if o == nil || o.GetvBondAddress == nil {
		var ret string
		return ret
	}
	return *o.GetvBondAddress
}

// GetGetvBondAddressOk returns a tuple with the GetvBondAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantModel) GetGetvBondAddressOk() (*string, bool) {
	if o == nil || o.GetvBondAddress == nil {
		return nil, false
	}
	return o.GetvBondAddress, true
}

// HasGetvBondAddress returns a boolean if a field has been set.
func (o *UpdateTenantModel) HasGetvBondAddress() bool {
	if o != nil && o.GetvBondAddress != nil {
		return true
	}

	return false
}

// SetGetvBondAddress gets a reference to the given string and assigns it to the GetvBondAddress field.
func (o *UpdateTenantModel) SetGetvBondAddress(v string) {
	o.GetvBondAddress = &v
}

// GetIdpMetadata returns the IdpMetadata field value if set, zero value otherwise.
func (o *UpdateTenantModel) GetIdpMetadata() string {
	if o == nil || o.IdpMetadata == nil {
		var ret string
		return ret
	}
	return *o.IdpMetadata
}

// GetIdpMetadataOk returns a tuple with the IdpMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantModel) GetIdpMetadataOk() (*string, bool) {
	if o == nil || o.IdpMetadata == nil {
		return nil, false
	}
	return o.IdpMetadata, true
}

// HasIdpMetadata returns a boolean if a field has been set.
func (o *UpdateTenantModel) HasIdpMetadata() bool {
	if o != nil && o.IdpMetadata != nil {
		return true
	}

	return false
}

// SetIdpMetadata gets a reference to the given string and assigns it to the IdpMetadata field.
func (o *UpdateTenantModel) SetIdpMetadata(v string) {
	o.IdpMetadata = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *UpdateTenantModel) GetMode() string {
	if o == nil || o.Mode == nil {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantModel) GetModeOk() (*string, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *UpdateTenantModel) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *UpdateTenantModel) SetMode(v string) {
	o.Mode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateTenantModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateTenantModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateTenantModel) SetName(v string) {
	o.Name = &v
}

// GetOldIdpMetadata returns the OldIdpMetadata field value if set, zero value otherwise.
func (o *UpdateTenantModel) GetOldIdpMetadata() string {
	if o == nil || o.OldIdpMetadata == nil {
		var ret string
		return ret
	}
	return *o.OldIdpMetadata
}

// GetOldIdpMetadataOk returns a tuple with the OldIdpMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantModel) GetOldIdpMetadataOk() (*string, bool) {
	if o == nil || o.OldIdpMetadata == nil {
		return nil, false
	}
	return o.OldIdpMetadata, true
}

// HasOldIdpMetadata returns a boolean if a field has been set.
func (o *UpdateTenantModel) HasOldIdpMetadata() bool {
	if o != nil && o.OldIdpMetadata != nil {
		return true
	}

	return false
}

// SetOldIdpMetadata gets a reference to the given string and assigns it to the OldIdpMetadata field.
func (o *UpdateTenantModel) SetOldIdpMetadata(v string) {
	o.OldIdpMetadata = &v
}

// GetSpMetadata returns the SpMetadata field value if set, zero value otherwise.
func (o *UpdateTenantModel) GetSpMetadata() string {
	if o == nil || o.SpMetadata == nil {
		var ret string
		return ret
	}
	return *o.SpMetadata
}

// GetSpMetadataOk returns a tuple with the SpMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantModel) GetSpMetadataOk() (*string, bool) {
	if o == nil || o.SpMetadata == nil {
		return nil, false
	}
	return o.SpMetadata, true
}

// HasSpMetadata returns a boolean if a field has been set.
func (o *UpdateTenantModel) HasSpMetadata() bool {
	if o != nil && o.SpMetadata != nil {
		return true
	}

	return false
}

// SetSpMetadata gets a reference to the given string and assigns it to the SpMetadata field.
func (o *UpdateTenantModel) SetSpMetadata(v string) {
	o.SpMetadata = &v
}

// GetSubDomain returns the SubDomain field value if set, zero value otherwise.
func (o *UpdateTenantModel) GetSubDomain() string {
	if o == nil || o.SubDomain == nil {
		var ret string
		return ret
	}
	return *o.SubDomain
}

// GetSubDomainOk returns a tuple with the SubDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantModel) GetSubDomainOk() (*string, bool) {
	if o == nil || o.SubDomain == nil {
		return nil, false
	}
	return o.SubDomain, true
}

// HasSubDomain returns a boolean if a field has been set.
func (o *UpdateTenantModel) HasSubDomain() bool {
	if o != nil && o.SubDomain != nil {
		return true
	}

	return false
}

// SetSubDomain gets a reference to the given string and assigns it to the SubDomain field.
func (o *UpdateTenantModel) SetSubDomain(v string) {
	o.SubDomain = &v
}

// GetWanEdgeForecast returns the WanEdgeForecast field value if set, zero value otherwise.
func (o *UpdateTenantModel) GetWanEdgeForecast() string {
	if o == nil || o.WanEdgeForecast == nil {
		var ret string
		return ret
	}
	return *o.WanEdgeForecast
}

// GetWanEdgeForecastOk returns a tuple with the WanEdgeForecast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantModel) GetWanEdgeForecastOk() (*string, bool) {
	if o == nil || o.WanEdgeForecast == nil {
		return nil, false
	}
	return o.WanEdgeForecast, true
}

// HasWanEdgeForecast returns a boolean if a field has been set.
func (o *UpdateTenantModel) HasWanEdgeForecast() bool {
	if o != nil && o.WanEdgeForecast != nil {
		return true
	}

	return false
}

// SetWanEdgeForecast gets a reference to the given string and assigns it to the WanEdgeForecast field.
func (o *UpdateTenantModel) SetWanEdgeForecast(v string) {
	o.WanEdgeForecast = &v
}

func (o UpdateTenantModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Desc != nil {
		toSerialize["desc"] = o.Desc
	}
	if o.GetvBondAddress != nil {
		toSerialize["getvBondAddress"] = o.GetvBondAddress
	}
	if o.IdpMetadata != nil {
		toSerialize["idpMetadata"] = o.IdpMetadata
	}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OldIdpMetadata != nil {
		toSerialize["oldIdpMetadata"] = o.OldIdpMetadata
	}
	if o.SpMetadata != nil {
		toSerialize["spMetadata"] = o.SpMetadata
	}
	if o.SubDomain != nil {
		toSerialize["subDomain"] = o.SubDomain
	}
	if o.WanEdgeForecast != nil {
		toSerialize["wanEdgeForecast"] = o.WanEdgeForecast
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateTenantModel struct {
	value *UpdateTenantModel
	isSet bool
}

func (v NullableUpdateTenantModel) Get() *UpdateTenantModel {
	return v.value
}

func (v *NullableUpdateTenantModel) Set(val *UpdateTenantModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTenantModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTenantModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTenantModel(val *UpdateTenantModel) *NullableUpdateTenantModel {
	return &NullableUpdateTenantModel{value: val, isSet: true}
}

func (v NullableUpdateTenantModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTenantModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


