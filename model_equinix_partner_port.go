/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EquinixPartnerPort struct for EquinixPartnerPort
type EquinixPartnerPort struct {
	AuthorizationKey *string `json:"authorizationKey,omitempty"`
	CompanyUid *string `json:"companyUid,omitempty"`
	ConnectType *string `json:"connectType,omitempty"`
	ProductUid *string `json:"productUid,omitempty"`
	Speed *string `json:"speed,omitempty"`
	VxcId *string `json:"vxcId,omitempty"`
	VxcPermitted *bool `json:"vxcPermitted,omitempty"`
}

// NewEquinixPartnerPort instantiates a new EquinixPartnerPort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEquinixPartnerPort() *EquinixPartnerPort {
	this := EquinixPartnerPort{}
	return &this
}

// NewEquinixPartnerPortWithDefaults instantiates a new EquinixPartnerPort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEquinixPartnerPortWithDefaults() *EquinixPartnerPort {
	this := EquinixPartnerPort{}
	return &this
}

// GetAuthorizationKey returns the AuthorizationKey field value if set, zero value otherwise.
func (o *EquinixPartnerPort) GetAuthorizationKey() string {
	if o == nil || isNil(o.AuthorizationKey) {
		var ret string
		return ret
	}
	return *o.AuthorizationKey
}

// GetAuthorizationKeyOk returns a tuple with the AuthorizationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquinixPartnerPort) GetAuthorizationKeyOk() (*string, bool) {
	if o == nil || isNil(o.AuthorizationKey) {
    return nil, false
	}
	return o.AuthorizationKey, true
}

// HasAuthorizationKey returns a boolean if a field has been set.
func (o *EquinixPartnerPort) HasAuthorizationKey() bool {
	if o != nil && !isNil(o.AuthorizationKey) {
		return true
	}

	return false
}

// SetAuthorizationKey gets a reference to the given string and assigns it to the AuthorizationKey field.
func (o *EquinixPartnerPort) SetAuthorizationKey(v string) {
	o.AuthorizationKey = &v
}

// GetCompanyUid returns the CompanyUid field value if set, zero value otherwise.
func (o *EquinixPartnerPort) GetCompanyUid() string {
	if o == nil || isNil(o.CompanyUid) {
		var ret string
		return ret
	}
	return *o.CompanyUid
}

// GetCompanyUidOk returns a tuple with the CompanyUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquinixPartnerPort) GetCompanyUidOk() (*string, bool) {
	if o == nil || isNil(o.CompanyUid) {
    return nil, false
	}
	return o.CompanyUid, true
}

// HasCompanyUid returns a boolean if a field has been set.
func (o *EquinixPartnerPort) HasCompanyUid() bool {
	if o != nil && !isNil(o.CompanyUid) {
		return true
	}

	return false
}

// SetCompanyUid gets a reference to the given string and assigns it to the CompanyUid field.
func (o *EquinixPartnerPort) SetCompanyUid(v string) {
	o.CompanyUid = &v
}

// GetConnectType returns the ConnectType field value if set, zero value otherwise.
func (o *EquinixPartnerPort) GetConnectType() string {
	if o == nil || isNil(o.ConnectType) {
		var ret string
		return ret
	}
	return *o.ConnectType
}

// GetConnectTypeOk returns a tuple with the ConnectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquinixPartnerPort) GetConnectTypeOk() (*string, bool) {
	if o == nil || isNil(o.ConnectType) {
    return nil, false
	}
	return o.ConnectType, true
}

// HasConnectType returns a boolean if a field has been set.
func (o *EquinixPartnerPort) HasConnectType() bool {
	if o != nil && !isNil(o.ConnectType) {
		return true
	}

	return false
}

// SetConnectType gets a reference to the given string and assigns it to the ConnectType field.
func (o *EquinixPartnerPort) SetConnectType(v string) {
	o.ConnectType = &v
}

// GetProductUid returns the ProductUid field value if set, zero value otherwise.
func (o *EquinixPartnerPort) GetProductUid() string {
	if o == nil || isNil(o.ProductUid) {
		var ret string
		return ret
	}
	return *o.ProductUid
}

// GetProductUidOk returns a tuple with the ProductUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquinixPartnerPort) GetProductUidOk() (*string, bool) {
	if o == nil || isNil(o.ProductUid) {
    return nil, false
	}
	return o.ProductUid, true
}

// HasProductUid returns a boolean if a field has been set.
func (o *EquinixPartnerPort) HasProductUid() bool {
	if o != nil && !isNil(o.ProductUid) {
		return true
	}

	return false
}

// SetProductUid gets a reference to the given string and assigns it to the ProductUid field.
func (o *EquinixPartnerPort) SetProductUid(v string) {
	o.ProductUid = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *EquinixPartnerPort) GetSpeed() string {
	if o == nil || isNil(o.Speed) {
		var ret string
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquinixPartnerPort) GetSpeedOk() (*string, bool) {
	if o == nil || isNil(o.Speed) {
    return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *EquinixPartnerPort) HasSpeed() bool {
	if o != nil && !isNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given string and assigns it to the Speed field.
func (o *EquinixPartnerPort) SetSpeed(v string) {
	o.Speed = &v
}

// GetVxcId returns the VxcId field value if set, zero value otherwise.
func (o *EquinixPartnerPort) GetVxcId() string {
	if o == nil || isNil(o.VxcId) {
		var ret string
		return ret
	}
	return *o.VxcId
}

// GetVxcIdOk returns a tuple with the VxcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquinixPartnerPort) GetVxcIdOk() (*string, bool) {
	if o == nil || isNil(o.VxcId) {
    return nil, false
	}
	return o.VxcId, true
}

// HasVxcId returns a boolean if a field has been set.
func (o *EquinixPartnerPort) HasVxcId() bool {
	if o != nil && !isNil(o.VxcId) {
		return true
	}

	return false
}

// SetVxcId gets a reference to the given string and assigns it to the VxcId field.
func (o *EquinixPartnerPort) SetVxcId(v string) {
	o.VxcId = &v
}

// GetVxcPermitted returns the VxcPermitted field value if set, zero value otherwise.
func (o *EquinixPartnerPort) GetVxcPermitted() bool {
	if o == nil || isNil(o.VxcPermitted) {
		var ret bool
		return ret
	}
	return *o.VxcPermitted
}

// GetVxcPermittedOk returns a tuple with the VxcPermitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquinixPartnerPort) GetVxcPermittedOk() (*bool, bool) {
	if o == nil || isNil(o.VxcPermitted) {
    return nil, false
	}
	return o.VxcPermitted, true
}

// HasVxcPermitted returns a boolean if a field has been set.
func (o *EquinixPartnerPort) HasVxcPermitted() bool {
	if o != nil && !isNil(o.VxcPermitted) {
		return true
	}

	return false
}

// SetVxcPermitted gets a reference to the given bool and assigns it to the VxcPermitted field.
func (o *EquinixPartnerPort) SetVxcPermitted(v bool) {
	o.VxcPermitted = &v
}

func (o EquinixPartnerPort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AuthorizationKey) {
		toSerialize["authorizationKey"] = o.AuthorizationKey
	}
	if !isNil(o.CompanyUid) {
		toSerialize["companyUid"] = o.CompanyUid
	}
	if !isNil(o.ConnectType) {
		toSerialize["connectType"] = o.ConnectType
	}
	if !isNil(o.ProductUid) {
		toSerialize["productUid"] = o.ProductUid
	}
	if !isNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !isNil(o.VxcId) {
		toSerialize["vxcId"] = o.VxcId
	}
	if !isNil(o.VxcPermitted) {
		toSerialize["vxcPermitted"] = o.VxcPermitted
	}
	return json.Marshal(toSerialize)
}

type NullableEquinixPartnerPort struct {
	value *EquinixPartnerPort
	isSet bool
}

func (v NullableEquinixPartnerPort) Get() *EquinixPartnerPort {
	return v.value
}

func (v *NullableEquinixPartnerPort) Set(val *EquinixPartnerPort) {
	v.value = val
	v.isSet = true
}

func (v NullableEquinixPartnerPort) IsSet() bool {
	return v.isSet
}

func (v *NullableEquinixPartnerPort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEquinixPartnerPort(val *EquinixPartnerPort) *NullableEquinixPartnerPort {
	return &NullableEquinixPartnerPort{value: val, isSet: true}
}

func (v NullableEquinixPartnerPort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEquinixPartnerPort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


