/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RadioBandSetting24G struct for RadioBandSetting24G
type RadioBandSetting24G struct {
	Band *string `json:"band,omitempty"`
	Channel *string `json:"channel,omitempty"`
	ChannelWidth *string `json:"channelWidth,omitempty"`
	TransmitPower *string `json:"transmitPower,omitempty"`
}

// NewRadioBandSetting24G instantiates a new RadioBandSetting24G object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRadioBandSetting24G() *RadioBandSetting24G {
	this := RadioBandSetting24G{}
	return &this
}

// NewRadioBandSetting24GWithDefaults instantiates a new RadioBandSetting24G object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadioBandSetting24GWithDefaults() *RadioBandSetting24G {
	this := RadioBandSetting24G{}
	return &this
}

// GetBand returns the Band field value if set, zero value otherwise.
func (o *RadioBandSetting24G) GetBand() string {
	if o == nil || o.Band == nil {
		var ret string
		return ret
	}
	return *o.Band
}

// GetBandOk returns a tuple with the Band field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioBandSetting24G) GetBandOk() (*string, bool) {
	if o == nil || o.Band == nil {
		return nil, false
	}
	return o.Band, true
}

// HasBand returns a boolean if a field has been set.
func (o *RadioBandSetting24G) HasBand() bool {
	if o != nil && o.Band != nil {
		return true
	}

	return false
}

// SetBand gets a reference to the given string and assigns it to the Band field.
func (o *RadioBandSetting24G) SetBand(v string) {
	o.Band = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *RadioBandSetting24G) GetChannel() string {
	if o == nil || o.Channel == nil {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioBandSetting24G) GetChannelOk() (*string, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *RadioBandSetting24G) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *RadioBandSetting24G) SetChannel(v string) {
	o.Channel = &v
}

// GetChannelWidth returns the ChannelWidth field value if set, zero value otherwise.
func (o *RadioBandSetting24G) GetChannelWidth() string {
	if o == nil || o.ChannelWidth == nil {
		var ret string
		return ret
	}
	return *o.ChannelWidth
}

// GetChannelWidthOk returns a tuple with the ChannelWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioBandSetting24G) GetChannelWidthOk() (*string, bool) {
	if o == nil || o.ChannelWidth == nil {
		return nil, false
	}
	return o.ChannelWidth, true
}

// HasChannelWidth returns a boolean if a field has been set.
func (o *RadioBandSetting24G) HasChannelWidth() bool {
	if o != nil && o.ChannelWidth != nil {
		return true
	}

	return false
}

// SetChannelWidth gets a reference to the given string and assigns it to the ChannelWidth field.
func (o *RadioBandSetting24G) SetChannelWidth(v string) {
	o.ChannelWidth = &v
}

// GetTransmitPower returns the TransmitPower field value if set, zero value otherwise.
func (o *RadioBandSetting24G) GetTransmitPower() string {
	if o == nil || o.TransmitPower == nil {
		var ret string
		return ret
	}
	return *o.TransmitPower
}

// GetTransmitPowerOk returns a tuple with the TransmitPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadioBandSetting24G) GetTransmitPowerOk() (*string, bool) {
	if o == nil || o.TransmitPower == nil {
		return nil, false
	}
	return o.TransmitPower, true
}

// HasTransmitPower returns a boolean if a field has been set.
func (o *RadioBandSetting24G) HasTransmitPower() bool {
	if o != nil && o.TransmitPower != nil {
		return true
	}

	return false
}

// SetTransmitPower gets a reference to the given string and assigns it to the TransmitPower field.
func (o *RadioBandSetting24G) SetTransmitPower(v string) {
	o.TransmitPower = &v
}

func (o RadioBandSetting24G) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Band != nil {
		toSerialize["band"] = o.Band
	}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.ChannelWidth != nil {
		toSerialize["channelWidth"] = o.ChannelWidth
	}
	if o.TransmitPower != nil {
		toSerialize["transmitPower"] = o.TransmitPower
	}
	return json.Marshal(toSerialize)
}

type NullableRadioBandSetting24G struct {
	value *RadioBandSetting24G
	isSet bool
}

func (v NullableRadioBandSetting24G) Get() *RadioBandSetting24G {
	return v.value
}

func (v *NullableRadioBandSetting24G) Set(val *RadioBandSetting24G) {
	v.value = val
	v.isSet = true
}

func (v NullableRadioBandSetting24G) IsSet() bool {
	return v.isSet
}

func (v *NullableRadioBandSetting24G) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRadioBandSetting24G(val *RadioBandSetting24G) *NullableRadioBandSetting24G {
	return &NullableRadioBandSetting24G{value: val, isSet: true}
}

func (v NullableRadioBandSetting24G) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRadioBandSetting24G) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


