/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateDeviceParams struct for CreateDeviceParams
type CreateDeviceParams struct {
	DeviceIP *string `json:"deviceIP,omitempty"`
	GenerateCSR *bool `json:"generateCSR,omitempty"`
	Password *string `json:"password,omitempty"`
	Personality *string `json:"personality,omitempty"`
	Port *string `json:"port,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewCreateDeviceParams instantiates a new CreateDeviceParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceParams() *CreateDeviceParams {
	this := CreateDeviceParams{}
	return &this
}

// NewCreateDeviceParamsWithDefaults instantiates a new CreateDeviceParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceParamsWithDefaults() *CreateDeviceParams {
	this := CreateDeviceParams{}
	return &this
}

// GetDeviceIP returns the DeviceIP field value if set, zero value otherwise.
func (o *CreateDeviceParams) GetDeviceIP() string {
	if o == nil || isNil(o.DeviceIP) {
		var ret string
		return ret
	}
	return *o.DeviceIP
}

// GetDeviceIPOk returns a tuple with the DeviceIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceParams) GetDeviceIPOk() (*string, bool) {
	if o == nil || isNil(o.DeviceIP) {
    return nil, false
	}
	return o.DeviceIP, true
}

// HasDeviceIP returns a boolean if a field has been set.
func (o *CreateDeviceParams) HasDeviceIP() bool {
	if o != nil && !isNil(o.DeviceIP) {
		return true
	}

	return false
}

// SetDeviceIP gets a reference to the given string and assigns it to the DeviceIP field.
func (o *CreateDeviceParams) SetDeviceIP(v string) {
	o.DeviceIP = &v
}

// GetGenerateCSR returns the GenerateCSR field value if set, zero value otherwise.
func (o *CreateDeviceParams) GetGenerateCSR() bool {
	if o == nil || isNil(o.GenerateCSR) {
		var ret bool
		return ret
	}
	return *o.GenerateCSR
}

// GetGenerateCSROk returns a tuple with the GenerateCSR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceParams) GetGenerateCSROk() (*bool, bool) {
	if o == nil || isNil(o.GenerateCSR) {
    return nil, false
	}
	return o.GenerateCSR, true
}

// HasGenerateCSR returns a boolean if a field has been set.
func (o *CreateDeviceParams) HasGenerateCSR() bool {
	if o != nil && !isNil(o.GenerateCSR) {
		return true
	}

	return false
}

// SetGenerateCSR gets a reference to the given bool and assigns it to the GenerateCSR field.
func (o *CreateDeviceParams) SetGenerateCSR(v bool) {
	o.GenerateCSR = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateDeviceParams) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceParams) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateDeviceParams) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateDeviceParams) SetPassword(v string) {
	o.Password = &v
}

// GetPersonality returns the Personality field value if set, zero value otherwise.
func (o *CreateDeviceParams) GetPersonality() string {
	if o == nil || isNil(o.Personality) {
		var ret string
		return ret
	}
	return *o.Personality
}

// GetPersonalityOk returns a tuple with the Personality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceParams) GetPersonalityOk() (*string, bool) {
	if o == nil || isNil(o.Personality) {
    return nil, false
	}
	return o.Personality, true
}

// HasPersonality returns a boolean if a field has been set.
func (o *CreateDeviceParams) HasPersonality() bool {
	if o != nil && !isNil(o.Personality) {
		return true
	}

	return false
}

// SetPersonality gets a reference to the given string and assigns it to the Personality field.
func (o *CreateDeviceParams) SetPersonality(v string) {
	o.Personality = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CreateDeviceParams) GetPort() string {
	if o == nil || isNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceParams) GetPortOk() (*string, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CreateDeviceParams) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *CreateDeviceParams) SetPort(v string) {
	o.Port = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *CreateDeviceParams) GetProtocol() string {
	if o == nil || isNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceParams) GetProtocolOk() (*string, bool) {
	if o == nil || isNil(o.Protocol) {
    return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *CreateDeviceParams) HasProtocol() bool {
	if o != nil && !isNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *CreateDeviceParams) SetProtocol(v string) {
	o.Protocol = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CreateDeviceParams) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceParams) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateDeviceParams) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CreateDeviceParams) SetUsername(v string) {
	o.Username = &v
}

func (o CreateDeviceParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DeviceIP) {
		toSerialize["deviceIP"] = o.DeviceIP
	}
	if !isNil(o.GenerateCSR) {
		toSerialize["generateCSR"] = o.GenerateCSR
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.Personality) {
		toSerialize["personality"] = o.Personality
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDeviceParams struct {
	value *CreateDeviceParams
	isSet bool
}

func (v NullableCreateDeviceParams) Get() *CreateDeviceParams {
	return v.value
}

func (v *NullableCreateDeviceParams) Set(val *CreateDeviceParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceParams(val *CreateDeviceParams) *NullableCreateDeviceParams {
	return &NullableCreateDeviceParams{value: val, isSet: true}
}

func (v NullableCreateDeviceParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


