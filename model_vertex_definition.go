/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VertexDefinition struct for VertexDefinition
type VertexDefinition struct {
	InEdges []string `json:"inEdges,omitempty"`
	Name *string `json:"name,omitempty"`
	OutEdges []string `json:"outEdges,omitempty"`
	Properties []PropertyDefinition `json:"properties,omitempty"`
}

// NewVertexDefinition instantiates a new VertexDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVertexDefinition() *VertexDefinition {
	this := VertexDefinition{}
	return &this
}

// NewVertexDefinitionWithDefaults instantiates a new VertexDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVertexDefinitionWithDefaults() *VertexDefinition {
	this := VertexDefinition{}
	return &this
}

// GetInEdges returns the InEdges field value if set, zero value otherwise.
func (o *VertexDefinition) GetInEdges() []string {
	if o == nil || o.InEdges == nil {
		var ret []string
		return ret
	}
	return o.InEdges
}

// GetInEdgesOk returns a tuple with the InEdges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VertexDefinition) GetInEdgesOk() ([]string, bool) {
	if o == nil || o.InEdges == nil {
		return nil, false
	}
	return o.InEdges, true
}

// HasInEdges returns a boolean if a field has been set.
func (o *VertexDefinition) HasInEdges() bool {
	if o != nil && o.InEdges != nil {
		return true
	}

	return false
}

// SetInEdges gets a reference to the given []string and assigns it to the InEdges field.
func (o *VertexDefinition) SetInEdges(v []string) {
	o.InEdges = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VertexDefinition) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VertexDefinition) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VertexDefinition) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VertexDefinition) SetName(v string) {
	o.Name = &v
}

// GetOutEdges returns the OutEdges field value if set, zero value otherwise.
func (o *VertexDefinition) GetOutEdges() []string {
	if o == nil || o.OutEdges == nil {
		var ret []string
		return ret
	}
	return o.OutEdges
}

// GetOutEdgesOk returns a tuple with the OutEdges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VertexDefinition) GetOutEdgesOk() ([]string, bool) {
	if o == nil || o.OutEdges == nil {
		return nil, false
	}
	return o.OutEdges, true
}

// HasOutEdges returns a boolean if a field has been set.
func (o *VertexDefinition) HasOutEdges() bool {
	if o != nil && o.OutEdges != nil {
		return true
	}

	return false
}

// SetOutEdges gets a reference to the given []string and assigns it to the OutEdges field.
func (o *VertexDefinition) SetOutEdges(v []string) {
	o.OutEdges = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *VertexDefinition) GetProperties() []PropertyDefinition {
	if o == nil || o.Properties == nil {
		var ret []PropertyDefinition
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VertexDefinition) GetPropertiesOk() ([]PropertyDefinition, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *VertexDefinition) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []PropertyDefinition and assigns it to the Properties field.
func (o *VertexDefinition) SetProperties(v []PropertyDefinition) {
	o.Properties = v
}

func (o VertexDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InEdges != nil {
		toSerialize["inEdges"] = o.InEdges
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OutEdges != nil {
		toSerialize["outEdges"] = o.OutEdges
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableVertexDefinition struct {
	value *VertexDefinition
	isSet bool
}

func (v NullableVertexDefinition) Get() *VertexDefinition {
	return v.value
}

func (v *NullableVertexDefinition) Set(val *VertexDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableVertexDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableVertexDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVertexDefinition(val *VertexDefinition) *NullableVertexDefinition {
	return &NullableVertexDefinition{value: val, isSet: true}
}

func (v NullableVertexDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVertexDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


