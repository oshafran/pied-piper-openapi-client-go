/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PolicyRule struct for PolicyRule
type PolicyRule struct {
	Action *string `json:"action,omitempty"`
	DestIp *string `json:"destIp,omitempty"`
	DestPort *int32 `json:"destPort,omitempty"`
	ProtocolType []string `json:"protocolType,omitempty"`
	SourceIp *string `json:"sourceIp,omitempty"`
	SourcePort *int32 `json:"sourcePort,omitempty"`
}

// NewPolicyRule instantiates a new PolicyRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyRule() *PolicyRule {
	this := PolicyRule{}
	return &this
}

// NewPolicyRuleWithDefaults instantiates a new PolicyRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyRuleWithDefaults() *PolicyRule {
	this := PolicyRule{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *PolicyRule) GetAction() string {
	if o == nil || isNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRule) GetActionOk() (*string, bool) {
	if o == nil || isNil(o.Action) {
    return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *PolicyRule) HasAction() bool {
	if o != nil && !isNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *PolicyRule) SetAction(v string) {
	o.Action = &v
}

// GetDestIp returns the DestIp field value if set, zero value otherwise.
func (o *PolicyRule) GetDestIp() string {
	if o == nil || isNil(o.DestIp) {
		var ret string
		return ret
	}
	return *o.DestIp
}

// GetDestIpOk returns a tuple with the DestIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRule) GetDestIpOk() (*string, bool) {
	if o == nil || isNil(o.DestIp) {
    return nil, false
	}
	return o.DestIp, true
}

// HasDestIp returns a boolean if a field has been set.
func (o *PolicyRule) HasDestIp() bool {
	if o != nil && !isNil(o.DestIp) {
		return true
	}

	return false
}

// SetDestIp gets a reference to the given string and assigns it to the DestIp field.
func (o *PolicyRule) SetDestIp(v string) {
	o.DestIp = &v
}

// GetDestPort returns the DestPort field value if set, zero value otherwise.
func (o *PolicyRule) GetDestPort() int32 {
	if o == nil || isNil(o.DestPort) {
		var ret int32
		return ret
	}
	return *o.DestPort
}

// GetDestPortOk returns a tuple with the DestPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRule) GetDestPortOk() (*int32, bool) {
	if o == nil || isNil(o.DestPort) {
    return nil, false
	}
	return o.DestPort, true
}

// HasDestPort returns a boolean if a field has been set.
func (o *PolicyRule) HasDestPort() bool {
	if o != nil && !isNil(o.DestPort) {
		return true
	}

	return false
}

// SetDestPort gets a reference to the given int32 and assigns it to the DestPort field.
func (o *PolicyRule) SetDestPort(v int32) {
	o.DestPort = &v
}

// GetProtocolType returns the ProtocolType field value if set, zero value otherwise.
func (o *PolicyRule) GetProtocolType() []string {
	if o == nil || isNil(o.ProtocolType) {
		var ret []string
		return ret
	}
	return o.ProtocolType
}

// GetProtocolTypeOk returns a tuple with the ProtocolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRule) GetProtocolTypeOk() ([]string, bool) {
	if o == nil || isNil(o.ProtocolType) {
    return nil, false
	}
	return o.ProtocolType, true
}

// HasProtocolType returns a boolean if a field has been set.
func (o *PolicyRule) HasProtocolType() bool {
	if o != nil && !isNil(o.ProtocolType) {
		return true
	}

	return false
}

// SetProtocolType gets a reference to the given []string and assigns it to the ProtocolType field.
func (o *PolicyRule) SetProtocolType(v []string) {
	o.ProtocolType = v
}

// GetSourceIp returns the SourceIp field value if set, zero value otherwise.
func (o *PolicyRule) GetSourceIp() string {
	if o == nil || isNil(o.SourceIp) {
		var ret string
		return ret
	}
	return *o.SourceIp
}

// GetSourceIpOk returns a tuple with the SourceIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRule) GetSourceIpOk() (*string, bool) {
	if o == nil || isNil(o.SourceIp) {
    return nil, false
	}
	return o.SourceIp, true
}

// HasSourceIp returns a boolean if a field has been set.
func (o *PolicyRule) HasSourceIp() bool {
	if o != nil && !isNil(o.SourceIp) {
		return true
	}

	return false
}

// SetSourceIp gets a reference to the given string and assigns it to the SourceIp field.
func (o *PolicyRule) SetSourceIp(v string) {
	o.SourceIp = &v
}

// GetSourcePort returns the SourcePort field value if set, zero value otherwise.
func (o *PolicyRule) GetSourcePort() int32 {
	if o == nil || isNil(o.SourcePort) {
		var ret int32
		return ret
	}
	return *o.SourcePort
}

// GetSourcePortOk returns a tuple with the SourcePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRule) GetSourcePortOk() (*int32, bool) {
	if o == nil || isNil(o.SourcePort) {
    return nil, false
	}
	return o.SourcePort, true
}

// HasSourcePort returns a boolean if a field has been set.
func (o *PolicyRule) HasSourcePort() bool {
	if o != nil && !isNil(o.SourcePort) {
		return true
	}

	return false
}

// SetSourcePort gets a reference to the given int32 and assigns it to the SourcePort field.
func (o *PolicyRule) SetSourcePort(v int32) {
	o.SourcePort = &v
}

func (o PolicyRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !isNil(o.DestIp) {
		toSerialize["destIp"] = o.DestIp
	}
	if !isNil(o.DestPort) {
		toSerialize["destPort"] = o.DestPort
	}
	if !isNil(o.ProtocolType) {
		toSerialize["protocolType"] = o.ProtocolType
	}
	if !isNil(o.SourceIp) {
		toSerialize["sourceIp"] = o.SourceIp
	}
	if !isNil(o.SourcePort) {
		toSerialize["sourcePort"] = o.SourcePort
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyRule struct {
	value *PolicyRule
	isSet bool
}

func (v NullablePolicyRule) Get() *PolicyRule {
	return v.value
}

func (v *NullablePolicyRule) Set(val *PolicyRule) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyRule) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyRule(val *PolicyRule) *NullablePolicyRule {
	return &NullablePolicyRule{value: val, isSet: true}
}

func (v NullablePolicyRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


