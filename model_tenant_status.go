/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TenantStatus struct for TenantStatus
type TenantStatus struct {
	ControlStatus *ControlStatus `json:"controlStatus,omitempty"`
	GetvEdgeHealth *VEdgeHealth `json:"getvEdgeHealth,omitempty"`
	GetvSmartStatus *VSmartStatus `json:"getvSmartStatus,omitempty"`
	SiteHealth *SiteHealth `json:"siteHealth,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
	TenantName *string `json:"tenantName,omitempty"`
}

// NewTenantStatus instantiates a new TenantStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantStatus() *TenantStatus {
	this := TenantStatus{}
	return &this
}

// NewTenantStatusWithDefaults instantiates a new TenantStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantStatusWithDefaults() *TenantStatus {
	this := TenantStatus{}
	return &this
}

// GetControlStatus returns the ControlStatus field value if set, zero value otherwise.
func (o *TenantStatus) GetControlStatus() ControlStatus {
	if o == nil || isNil(o.ControlStatus) {
		var ret ControlStatus
		return ret
	}
	return *o.ControlStatus
}

// GetControlStatusOk returns a tuple with the ControlStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatus) GetControlStatusOk() (*ControlStatus, bool) {
	if o == nil || isNil(o.ControlStatus) {
    return nil, false
	}
	return o.ControlStatus, true
}

// HasControlStatus returns a boolean if a field has been set.
func (o *TenantStatus) HasControlStatus() bool {
	if o != nil && !isNil(o.ControlStatus) {
		return true
	}

	return false
}

// SetControlStatus gets a reference to the given ControlStatus and assigns it to the ControlStatus field.
func (o *TenantStatus) SetControlStatus(v ControlStatus) {
	o.ControlStatus = &v
}

// GetGetvEdgeHealth returns the GetvEdgeHealth field value if set, zero value otherwise.
func (o *TenantStatus) GetGetvEdgeHealth() VEdgeHealth {
	if o == nil || isNil(o.GetvEdgeHealth) {
		var ret VEdgeHealth
		return ret
	}
	return *o.GetvEdgeHealth
}

// GetGetvEdgeHealthOk returns a tuple with the GetvEdgeHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatus) GetGetvEdgeHealthOk() (*VEdgeHealth, bool) {
	if o == nil || isNil(o.GetvEdgeHealth) {
    return nil, false
	}
	return o.GetvEdgeHealth, true
}

// HasGetvEdgeHealth returns a boolean if a field has been set.
func (o *TenantStatus) HasGetvEdgeHealth() bool {
	if o != nil && !isNil(o.GetvEdgeHealth) {
		return true
	}

	return false
}

// SetGetvEdgeHealth gets a reference to the given VEdgeHealth and assigns it to the GetvEdgeHealth field.
func (o *TenantStatus) SetGetvEdgeHealth(v VEdgeHealth) {
	o.GetvEdgeHealth = &v
}

// GetGetvSmartStatus returns the GetvSmartStatus field value if set, zero value otherwise.
func (o *TenantStatus) GetGetvSmartStatus() VSmartStatus {
	if o == nil || isNil(o.GetvSmartStatus) {
		var ret VSmartStatus
		return ret
	}
	return *o.GetvSmartStatus
}

// GetGetvSmartStatusOk returns a tuple with the GetvSmartStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatus) GetGetvSmartStatusOk() (*VSmartStatus, bool) {
	if o == nil || isNil(o.GetvSmartStatus) {
    return nil, false
	}
	return o.GetvSmartStatus, true
}

// HasGetvSmartStatus returns a boolean if a field has been set.
func (o *TenantStatus) HasGetvSmartStatus() bool {
	if o != nil && !isNil(o.GetvSmartStatus) {
		return true
	}

	return false
}

// SetGetvSmartStatus gets a reference to the given VSmartStatus and assigns it to the GetvSmartStatus field.
func (o *TenantStatus) SetGetvSmartStatus(v VSmartStatus) {
	o.GetvSmartStatus = &v
}

// GetSiteHealth returns the SiteHealth field value if set, zero value otherwise.
func (o *TenantStatus) GetSiteHealth() SiteHealth {
	if o == nil || isNil(o.SiteHealth) {
		var ret SiteHealth
		return ret
	}
	return *o.SiteHealth
}

// GetSiteHealthOk returns a tuple with the SiteHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatus) GetSiteHealthOk() (*SiteHealth, bool) {
	if o == nil || isNil(o.SiteHealth) {
    return nil, false
	}
	return o.SiteHealth, true
}

// HasSiteHealth returns a boolean if a field has been set.
func (o *TenantStatus) HasSiteHealth() bool {
	if o != nil && !isNil(o.SiteHealth) {
		return true
	}

	return false
}

// SetSiteHealth gets a reference to the given SiteHealth and assigns it to the SiteHealth field.
func (o *TenantStatus) SetSiteHealth(v SiteHealth) {
	o.SiteHealth = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *TenantStatus) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatus) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
    return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *TenantStatus) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *TenantStatus) SetTenantId(v string) {
	o.TenantId = &v
}

// GetTenantName returns the TenantName field value if set, zero value otherwise.
func (o *TenantStatus) GetTenantName() string {
	if o == nil || isNil(o.TenantName) {
		var ret string
		return ret
	}
	return *o.TenantName
}

// GetTenantNameOk returns a tuple with the TenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatus) GetTenantNameOk() (*string, bool) {
	if o == nil || isNil(o.TenantName) {
    return nil, false
	}
	return o.TenantName, true
}

// HasTenantName returns a boolean if a field has been set.
func (o *TenantStatus) HasTenantName() bool {
	if o != nil && !isNil(o.TenantName) {
		return true
	}

	return false
}

// SetTenantName gets a reference to the given string and assigns it to the TenantName field.
func (o *TenantStatus) SetTenantName(v string) {
	o.TenantName = &v
}

func (o TenantStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ControlStatus) {
		toSerialize["controlStatus"] = o.ControlStatus
	}
	if !isNil(o.GetvEdgeHealth) {
		toSerialize["getvEdgeHealth"] = o.GetvEdgeHealth
	}
	if !isNil(o.GetvSmartStatus) {
		toSerialize["getvSmartStatus"] = o.GetvSmartStatus
	}
	if !isNil(o.SiteHealth) {
		toSerialize["siteHealth"] = o.SiteHealth
	}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !isNil(o.TenantName) {
		toSerialize["tenantName"] = o.TenantName
	}
	return json.Marshal(toSerialize)
}

type NullableTenantStatus struct {
	value *TenantStatus
	isSet bool
}

func (v NullableTenantStatus) Get() *TenantStatus {
	return v.value
}

func (v *NullableTenantStatus) Set(val *TenantStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantStatus(val *TenantStatus) *NullableTenantStatus {
	return &NullableTenantStatus{value: val, isSet: true}
}

func (v NullableTenantStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


