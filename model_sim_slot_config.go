/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SimSlotConfig struct for SimSlotConfig
type SimSlotConfig struct {
	AttachProfileId *int32 `json:"attachProfileId,omitempty"`
	CarrierName *string `json:"carrierName,omitempty"`
	DataProfileIdList []int32 `json:"dataProfileIdList,omitempty"`
	ProfileList []CellularProfile `json:"profileList,omitempty"`
	SlotNumber *int32 `json:"slotNumber,omitempty"`
}

// NewSimSlotConfig instantiates a new SimSlotConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimSlotConfig() *SimSlotConfig {
	this := SimSlotConfig{}
	return &this
}

// NewSimSlotConfigWithDefaults instantiates a new SimSlotConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimSlotConfigWithDefaults() *SimSlotConfig {
	this := SimSlotConfig{}
	return &this
}

// GetAttachProfileId returns the AttachProfileId field value if set, zero value otherwise.
func (o *SimSlotConfig) GetAttachProfileId() int32 {
	if o == nil || isNil(o.AttachProfileId) {
		var ret int32
		return ret
	}
	return *o.AttachProfileId
}

// GetAttachProfileIdOk returns a tuple with the AttachProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimSlotConfig) GetAttachProfileIdOk() (*int32, bool) {
	if o == nil || isNil(o.AttachProfileId) {
    return nil, false
	}
	return o.AttachProfileId, true
}

// HasAttachProfileId returns a boolean if a field has been set.
func (o *SimSlotConfig) HasAttachProfileId() bool {
	if o != nil && !isNil(o.AttachProfileId) {
		return true
	}

	return false
}

// SetAttachProfileId gets a reference to the given int32 and assigns it to the AttachProfileId field.
func (o *SimSlotConfig) SetAttachProfileId(v int32) {
	o.AttachProfileId = &v
}

// GetCarrierName returns the CarrierName field value if set, zero value otherwise.
func (o *SimSlotConfig) GetCarrierName() string {
	if o == nil || isNil(o.CarrierName) {
		var ret string
		return ret
	}
	return *o.CarrierName
}

// GetCarrierNameOk returns a tuple with the CarrierName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimSlotConfig) GetCarrierNameOk() (*string, bool) {
	if o == nil || isNil(o.CarrierName) {
    return nil, false
	}
	return o.CarrierName, true
}

// HasCarrierName returns a boolean if a field has been set.
func (o *SimSlotConfig) HasCarrierName() bool {
	if o != nil && !isNil(o.CarrierName) {
		return true
	}

	return false
}

// SetCarrierName gets a reference to the given string and assigns it to the CarrierName field.
func (o *SimSlotConfig) SetCarrierName(v string) {
	o.CarrierName = &v
}

// GetDataProfileIdList returns the DataProfileIdList field value if set, zero value otherwise.
func (o *SimSlotConfig) GetDataProfileIdList() []int32 {
	if o == nil || isNil(o.DataProfileIdList) {
		var ret []int32
		return ret
	}
	return o.DataProfileIdList
}

// GetDataProfileIdListOk returns a tuple with the DataProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimSlotConfig) GetDataProfileIdListOk() ([]int32, bool) {
	if o == nil || isNil(o.DataProfileIdList) {
    return nil, false
	}
	return o.DataProfileIdList, true
}

// HasDataProfileIdList returns a boolean if a field has been set.
func (o *SimSlotConfig) HasDataProfileIdList() bool {
	if o != nil && !isNil(o.DataProfileIdList) {
		return true
	}

	return false
}

// SetDataProfileIdList gets a reference to the given []int32 and assigns it to the DataProfileIdList field.
func (o *SimSlotConfig) SetDataProfileIdList(v []int32) {
	o.DataProfileIdList = v
}

// GetProfileList returns the ProfileList field value if set, zero value otherwise.
func (o *SimSlotConfig) GetProfileList() []CellularProfile {
	if o == nil || isNil(o.ProfileList) {
		var ret []CellularProfile
		return ret
	}
	return o.ProfileList
}

// GetProfileListOk returns a tuple with the ProfileList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimSlotConfig) GetProfileListOk() ([]CellularProfile, bool) {
	if o == nil || isNil(o.ProfileList) {
    return nil, false
	}
	return o.ProfileList, true
}

// HasProfileList returns a boolean if a field has been set.
func (o *SimSlotConfig) HasProfileList() bool {
	if o != nil && !isNil(o.ProfileList) {
		return true
	}

	return false
}

// SetProfileList gets a reference to the given []CellularProfile and assigns it to the ProfileList field.
func (o *SimSlotConfig) SetProfileList(v []CellularProfile) {
	o.ProfileList = v
}

// GetSlotNumber returns the SlotNumber field value if set, zero value otherwise.
func (o *SimSlotConfig) GetSlotNumber() int32 {
	if o == nil || isNil(o.SlotNumber) {
		var ret int32
		return ret
	}
	return *o.SlotNumber
}

// GetSlotNumberOk returns a tuple with the SlotNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimSlotConfig) GetSlotNumberOk() (*int32, bool) {
	if o == nil || isNil(o.SlotNumber) {
    return nil, false
	}
	return o.SlotNumber, true
}

// HasSlotNumber returns a boolean if a field has been set.
func (o *SimSlotConfig) HasSlotNumber() bool {
	if o != nil && !isNil(o.SlotNumber) {
		return true
	}

	return false
}

// SetSlotNumber gets a reference to the given int32 and assigns it to the SlotNumber field.
func (o *SimSlotConfig) SetSlotNumber(v int32) {
	o.SlotNumber = &v
}

func (o SimSlotConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AttachProfileId) {
		toSerialize["attachProfileId"] = o.AttachProfileId
	}
	if !isNil(o.CarrierName) {
		toSerialize["carrierName"] = o.CarrierName
	}
	if !isNil(o.DataProfileIdList) {
		toSerialize["dataProfileIdList"] = o.DataProfileIdList
	}
	if !isNil(o.ProfileList) {
		toSerialize["profileList"] = o.ProfileList
	}
	if !isNil(o.SlotNumber) {
		toSerialize["slotNumber"] = o.SlotNumber
	}
	return json.Marshal(toSerialize)
}

type NullableSimSlotConfig struct {
	value *SimSlotConfig
	isSet bool
}

func (v NullableSimSlotConfig) Get() *SimSlotConfig {
	return v.value
}

func (v *NullableSimSlotConfig) Set(val *SimSlotConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSimSlotConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSimSlotConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimSlotConfig(val *SimSlotConfig) *NullableSimSlotConfig {
	return &NullableSimSlotConfig{value: val, isSet: true}
}

func (v NullableSimSlotConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimSlotConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


