/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Cellular struct for Cellular
type Cellular struct {
	SimSlot0 SimSlotConfig `json:"simSlot0"`
	SimSlot1 *SimSlotConfig `json:"simSlot1,omitempty"`
	PrimarySlot *int32 `json:"primarySlot,omitempty"`
	WanConfig *string `json:"wanConfig,omitempty"`
}

// NewCellular instantiates a new Cellular object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCellular(simSlot0 SimSlotConfig, name string, type_ string) *Cellular {
	this := Cellular{}
	this.Name = name
	this.Type = type_
	this.SimSlot0 = simSlot0
	return &this
}

// NewCellularWithDefaults instantiates a new Cellular object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCellularWithDefaults() *Cellular {
	this := Cellular{}
	return &this
}

// GetSimSlot0 returns the SimSlot0 field value
func (o *Cellular) GetSimSlot0() SimSlotConfig {
	if o == nil {
		var ret SimSlotConfig
		return ret
	}

	return o.SimSlot0
}

// GetSimSlot0Ok returns a tuple with the SimSlot0 field value
// and a boolean to check if the value has been set.
func (o *Cellular) GetSimSlot0Ok() (*SimSlotConfig, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SimSlot0, true
}

// SetSimSlot0 sets field value
func (o *Cellular) SetSimSlot0(v SimSlotConfig) {
	o.SimSlot0 = v
}

// GetSimSlot1 returns the SimSlot1 field value if set, zero value otherwise.
func (o *Cellular) GetSimSlot1() SimSlotConfig {
	if o == nil || isNil(o.SimSlot1) {
		var ret SimSlotConfig
		return ret
	}
	return *o.SimSlot1
}

// GetSimSlot1Ok returns a tuple with the SimSlot1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cellular) GetSimSlot1Ok() (*SimSlotConfig, bool) {
	if o == nil || isNil(o.SimSlot1) {
    return nil, false
	}
	return o.SimSlot1, true
}

// HasSimSlot1 returns a boolean if a field has been set.
func (o *Cellular) HasSimSlot1() bool {
	if o != nil && !isNil(o.SimSlot1) {
		return true
	}

	return false
}

// SetSimSlot1 gets a reference to the given SimSlotConfig and assigns it to the SimSlot1 field.
func (o *Cellular) SetSimSlot1(v SimSlotConfig) {
	o.SimSlot1 = &v
}

// GetPrimarySlot returns the PrimarySlot field value if set, zero value otherwise.
func (o *Cellular) GetPrimarySlot() int32 {
	if o == nil || isNil(o.PrimarySlot) {
		var ret int32
		return ret
	}
	return *o.PrimarySlot
}

// GetPrimarySlotOk returns a tuple with the PrimarySlot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cellular) GetPrimarySlotOk() (*int32, bool) {
	if o == nil || isNil(o.PrimarySlot) {
    return nil, false
	}
	return o.PrimarySlot, true
}

// HasPrimarySlot returns a boolean if a field has been set.
func (o *Cellular) HasPrimarySlot() bool {
	if o != nil && !isNil(o.PrimarySlot) {
		return true
	}

	return false
}

// SetPrimarySlot gets a reference to the given int32 and assigns it to the PrimarySlot field.
func (o *Cellular) SetPrimarySlot(v int32) {
	o.PrimarySlot = &v
}

// GetWanConfig returns the WanConfig field value if set, zero value otherwise.
func (o *Cellular) GetWanConfig() string {
	if o == nil || isNil(o.WanConfig) {
		var ret string
		return ret
	}
	return *o.WanConfig
}

// GetWanConfigOk returns a tuple with the WanConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cellular) GetWanConfigOk() (*string, bool) {
	if o == nil || isNil(o.WanConfig) {
    return nil, false
	}
	return o.WanConfig, true
}

// HasWanConfig returns a boolean if a field has been set.
func (o *Cellular) HasWanConfig() bool {
	if o != nil && !isNil(o.WanConfig) {
		return true
	}

	return false
}

// SetWanConfig gets a reference to the given string and assigns it to the WanConfig field.
func (o *Cellular) SetWanConfig(v string) {
	o.WanConfig = &v
}

func (o Cellular) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["simSlot0"] = o.SimSlot0
	}
	if !isNil(o.SimSlot1) {
		toSerialize["simSlot1"] = o.SimSlot1
	}
	if !isNil(o.PrimarySlot) {
		toSerialize["primarySlot"] = o.PrimarySlot
	}
	if !isNil(o.WanConfig) {
		toSerialize["wanConfig"] = o.WanConfig
	}
	return json.Marshal(toSerialize)
}

type NullableCellular struct {
	value *Cellular
	isSet bool
}

func (v NullableCellular) Get() *Cellular {
	return v.value
}

func (v *NullableCellular) Set(val *Cellular) {
	v.value = val
	v.isSet = true
}

func (v NullableCellular) IsSet() bool {
	return v.isSet
}

func (v *NullableCellular) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCellular(val *Cellular) *NullableCellular {
	return &NullableCellular{value: val, isSet: true}
}

func (v NullableCellular) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCellular) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


