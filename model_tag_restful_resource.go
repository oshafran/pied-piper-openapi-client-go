/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TagRestfulResource struct for TagRestfulResource
type TagRestfulResource struct {
	AllGroups *TagRestfulResourceAllGroups `json:"allGroups,omitempty"`
}

// NewTagRestfulResource instantiates a new TagRestfulResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagRestfulResource() *TagRestfulResource {
	this := TagRestfulResource{}
	return &this
}

// NewTagRestfulResourceWithDefaults instantiates a new TagRestfulResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagRestfulResourceWithDefaults() *TagRestfulResource {
	this := TagRestfulResource{}
	return &this
}

// GetAllGroups returns the AllGroups field value if set, zero value otherwise.
func (o *TagRestfulResource) GetAllGroups() TagRestfulResourceAllGroups {
	if o == nil || isNil(o.AllGroups) {
		var ret TagRestfulResourceAllGroups
		return ret
	}
	return *o.AllGroups
}

// GetAllGroupsOk returns a tuple with the AllGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagRestfulResource) GetAllGroupsOk() (*TagRestfulResourceAllGroups, bool) {
	if o == nil || isNil(o.AllGroups) {
    return nil, false
	}
	return o.AllGroups, true
}

// HasAllGroups returns a boolean if a field has been set.
func (o *TagRestfulResource) HasAllGroups() bool {
	if o != nil && !isNil(o.AllGroups) {
		return true
	}

	return false
}

// SetAllGroups gets a reference to the given TagRestfulResourceAllGroups and assigns it to the AllGroups field.
func (o *TagRestfulResource) SetAllGroups(v TagRestfulResourceAllGroups) {
	o.AllGroups = &v
}

func (o TagRestfulResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AllGroups) {
		toSerialize["allGroups"] = o.AllGroups
	}
	return json.Marshal(toSerialize)
}

type NullableTagRestfulResource struct {
	value *TagRestfulResource
	isSet bool
}

func (v NullableTagRestfulResource) Get() *TagRestfulResource {
	return v.value
}

func (v *NullableTagRestfulResource) Set(val *TagRestfulResource) {
	v.value = val
	v.isSet = true
}

func (v NullableTagRestfulResource) IsSet() bool {
	return v.isSet
}

func (v *NullableTagRestfulResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagRestfulResource(val *TagRestfulResource) *NullableTagRestfulResource {
	return &NullableTagRestfulResource{value: val, isSet: true}
}

func (v NullableTagRestfulResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagRestfulResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


