/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SiteToSiteVpn struct for SiteToSiteVpn
type SiteToSiteVpn struct {
	LocalInterface string `json:"localInterface"`
	LocalPrivateSubnet string `json:"localPrivateSubnet"`
	Name *string `json:"name,omitempty"`
	PreSharedSecret string `json:"preSharedSecret"`
	RemotePrivateSubnets string `json:"remotePrivateSubnets"`
	RemotePublicIp string `json:"remotePublicIp"`
	TunnelDnsAddress *string `json:"tunnelDnsAddress,omitempty"`
}

// NewSiteToSiteVpn instantiates a new SiteToSiteVpn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteToSiteVpn(localInterface string, localPrivateSubnet string, preSharedSecret string, remotePrivateSubnets string, remotePublicIp string) *SiteToSiteVpn {
	this := SiteToSiteVpn{}
	this.LocalInterface = localInterface
	this.LocalPrivateSubnet = localPrivateSubnet
	this.PreSharedSecret = preSharedSecret
	this.RemotePrivateSubnets = remotePrivateSubnets
	this.RemotePublicIp = remotePublicIp
	return &this
}

// NewSiteToSiteVpnWithDefaults instantiates a new SiteToSiteVpn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteToSiteVpnWithDefaults() *SiteToSiteVpn {
	this := SiteToSiteVpn{}
	return &this
}

// GetLocalInterface returns the LocalInterface field value
func (o *SiteToSiteVpn) GetLocalInterface() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocalInterface
}

// GetLocalInterfaceOk returns a tuple with the LocalInterface field value
// and a boolean to check if the value has been set.
func (o *SiteToSiteVpn) GetLocalInterfaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalInterface, true
}

// SetLocalInterface sets field value
func (o *SiteToSiteVpn) SetLocalInterface(v string) {
	o.LocalInterface = v
}

// GetLocalPrivateSubnet returns the LocalPrivateSubnet field value
func (o *SiteToSiteVpn) GetLocalPrivateSubnet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocalPrivateSubnet
}

// GetLocalPrivateSubnetOk returns a tuple with the LocalPrivateSubnet field value
// and a boolean to check if the value has been set.
func (o *SiteToSiteVpn) GetLocalPrivateSubnetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalPrivateSubnet, true
}

// SetLocalPrivateSubnet sets field value
func (o *SiteToSiteVpn) SetLocalPrivateSubnet(v string) {
	o.LocalPrivateSubnet = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SiteToSiteVpn) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteToSiteVpn) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SiteToSiteVpn) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SiteToSiteVpn) SetName(v string) {
	o.Name = &v
}

// GetPreSharedSecret returns the PreSharedSecret field value
func (o *SiteToSiteVpn) GetPreSharedSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreSharedSecret
}

// GetPreSharedSecretOk returns a tuple with the PreSharedSecret field value
// and a boolean to check if the value has been set.
func (o *SiteToSiteVpn) GetPreSharedSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreSharedSecret, true
}

// SetPreSharedSecret sets field value
func (o *SiteToSiteVpn) SetPreSharedSecret(v string) {
	o.PreSharedSecret = v
}

// GetRemotePrivateSubnets returns the RemotePrivateSubnets field value
func (o *SiteToSiteVpn) GetRemotePrivateSubnets() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemotePrivateSubnets
}

// GetRemotePrivateSubnetsOk returns a tuple with the RemotePrivateSubnets field value
// and a boolean to check if the value has been set.
func (o *SiteToSiteVpn) GetRemotePrivateSubnetsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemotePrivateSubnets, true
}

// SetRemotePrivateSubnets sets field value
func (o *SiteToSiteVpn) SetRemotePrivateSubnets(v string) {
	o.RemotePrivateSubnets = v
}

// GetRemotePublicIp returns the RemotePublicIp field value
func (o *SiteToSiteVpn) GetRemotePublicIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemotePublicIp
}

// GetRemotePublicIpOk returns a tuple with the RemotePublicIp field value
// and a boolean to check if the value has been set.
func (o *SiteToSiteVpn) GetRemotePublicIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemotePublicIp, true
}

// SetRemotePublicIp sets field value
func (o *SiteToSiteVpn) SetRemotePublicIp(v string) {
	o.RemotePublicIp = v
}

// GetTunnelDnsAddress returns the TunnelDnsAddress field value if set, zero value otherwise.
func (o *SiteToSiteVpn) GetTunnelDnsAddress() string {
	if o == nil || o.TunnelDnsAddress == nil {
		var ret string
		return ret
	}
	return *o.TunnelDnsAddress
}

// GetTunnelDnsAddressOk returns a tuple with the TunnelDnsAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteToSiteVpn) GetTunnelDnsAddressOk() (*string, bool) {
	if o == nil || o.TunnelDnsAddress == nil {
		return nil, false
	}
	return o.TunnelDnsAddress, true
}

// HasTunnelDnsAddress returns a boolean if a field has been set.
func (o *SiteToSiteVpn) HasTunnelDnsAddress() bool {
	if o != nil && o.TunnelDnsAddress != nil {
		return true
	}

	return false
}

// SetTunnelDnsAddress gets a reference to the given string and assigns it to the TunnelDnsAddress field.
func (o *SiteToSiteVpn) SetTunnelDnsAddress(v string) {
	o.TunnelDnsAddress = &v
}

func (o SiteToSiteVpn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["localInterface"] = o.LocalInterface
	}
	if true {
		toSerialize["localPrivateSubnet"] = o.LocalPrivateSubnet
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["preSharedSecret"] = o.PreSharedSecret
	}
	if true {
		toSerialize["remotePrivateSubnets"] = o.RemotePrivateSubnets
	}
	if true {
		toSerialize["remotePublicIp"] = o.RemotePublicIp
	}
	if o.TunnelDnsAddress != nil {
		toSerialize["tunnelDnsAddress"] = o.TunnelDnsAddress
	}
	return json.Marshal(toSerialize)
}

type NullableSiteToSiteVpn struct {
	value *SiteToSiteVpn
	isSet bool
}

func (v NullableSiteToSiteVpn) Get() *SiteToSiteVpn {
	return v.value
}

func (v *NullableSiteToSiteVpn) Set(val *SiteToSiteVpn) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteToSiteVpn) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteToSiteVpn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteToSiteVpn(val *SiteToSiteVpn) *NullableSiteToSiteVpn {
	return &NullableSiteToSiteVpn{value: val, isSet: true}
}

func (v NullableSiteToSiteVpn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteToSiteVpn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


