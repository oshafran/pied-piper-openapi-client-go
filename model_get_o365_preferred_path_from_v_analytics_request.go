/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetO365PreferredPathFromVAnalyticsRequest struct for GetO365PreferredPathFromVAnalyticsRequest
type GetO365PreferredPathFromVAnalyticsRequest struct {
	ValueType *string `json:"valueType,omitempty"`
	Empty *bool `json:"empty,omitempty"`
}

// NewGetO365PreferredPathFromVAnalyticsRequest instantiates a new GetO365PreferredPathFromVAnalyticsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetO365PreferredPathFromVAnalyticsRequest() *GetO365PreferredPathFromVAnalyticsRequest {
	this := GetO365PreferredPathFromVAnalyticsRequest{}
	return &this
}

// NewGetO365PreferredPathFromVAnalyticsRequestWithDefaults instantiates a new GetO365PreferredPathFromVAnalyticsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetO365PreferredPathFromVAnalyticsRequestWithDefaults() *GetO365PreferredPathFromVAnalyticsRequest {
	this := GetO365PreferredPathFromVAnalyticsRequest{}
	return &this
}

// GetValueType returns the ValueType field value if set, zero value otherwise.
func (o *GetO365PreferredPathFromVAnalyticsRequest) GetValueType() string {
	if o == nil || isNil(o.ValueType) {
		var ret string
		return ret
	}
	return *o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetO365PreferredPathFromVAnalyticsRequest) GetValueTypeOk() (*string, bool) {
	if o == nil || isNil(o.ValueType) {
    return nil, false
	}
	return o.ValueType, true
}

// HasValueType returns a boolean if a field has been set.
func (o *GetO365PreferredPathFromVAnalyticsRequest) HasValueType() bool {
	if o != nil && !isNil(o.ValueType) {
		return true
	}

	return false
}

// SetValueType gets a reference to the given string and assigns it to the ValueType field.
func (o *GetO365PreferredPathFromVAnalyticsRequest) SetValueType(v string) {
	o.ValueType = &v
}

// GetEmpty returns the Empty field value if set, zero value otherwise.
func (o *GetO365PreferredPathFromVAnalyticsRequest) GetEmpty() bool {
	if o == nil || isNil(o.Empty) {
		var ret bool
		return ret
	}
	return *o.Empty
}

// GetEmptyOk returns a tuple with the Empty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetO365PreferredPathFromVAnalyticsRequest) GetEmptyOk() (*bool, bool) {
	if o == nil || isNil(o.Empty) {
    return nil, false
	}
	return o.Empty, true
}

// HasEmpty returns a boolean if a field has been set.
func (o *GetO365PreferredPathFromVAnalyticsRequest) HasEmpty() bool {
	if o != nil && !isNil(o.Empty) {
		return true
	}

	return false
}

// SetEmpty gets a reference to the given bool and assigns it to the Empty field.
func (o *GetO365PreferredPathFromVAnalyticsRequest) SetEmpty(v bool) {
	o.Empty = &v
}

func (o GetO365PreferredPathFromVAnalyticsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ValueType) {
		toSerialize["valueType"] = o.ValueType
	}
	if !isNil(o.Empty) {
		toSerialize["empty"] = o.Empty
	}
	return json.Marshal(toSerialize)
}

type NullableGetO365PreferredPathFromVAnalyticsRequest struct {
	value *GetO365PreferredPathFromVAnalyticsRequest
	isSet bool
}

func (v NullableGetO365PreferredPathFromVAnalyticsRequest) Get() *GetO365PreferredPathFromVAnalyticsRequest {
	return v.value
}

func (v *NullableGetO365PreferredPathFromVAnalyticsRequest) Set(val *GetO365PreferredPathFromVAnalyticsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetO365PreferredPathFromVAnalyticsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetO365PreferredPathFromVAnalyticsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetO365PreferredPathFromVAnalyticsRequest(val *GetO365PreferredPathFromVAnalyticsRequest) *NullableGetO365PreferredPathFromVAnalyticsRequest {
	return &NullableGetO365PreferredPathFromVAnalyticsRequest{value: val, isSet: true}
}

func (v NullableGetO365PreferredPathFromVAnalyticsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetO365PreferredPathFromVAnalyticsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


