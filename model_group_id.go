/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GroupId This is the valid GroupId
type GroupId struct {
	GroupId *string `json:"groupId,omitempty"`
}

// NewGroupId instantiates a new GroupId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupId() *GroupId {
	this := GroupId{}
	return &this
}

// NewGroupIdWithDefaults instantiates a new GroupId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupIdWithDefaults() *GroupId {
	this := GroupId{}
	return &this
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *GroupId) GetGroupId() string {
	if o == nil || isNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupId) GetGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.GroupId) {
    return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *GroupId) HasGroupId() bool {
	if o != nil && !isNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *GroupId) SetGroupId(v string) {
	o.GroupId = &v
}

func (o GroupId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	return json.Marshal(toSerialize)
}

type NullableGroupId struct {
	value *GroupId
	isSet bool
}

func (v NullableGroupId) Get() *GroupId {
	return v.value
}

func (v *NullableGroupId) Set(val *GroupId) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupId) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupId(val *GroupId) *NullableGroupId {
	return &NullableGroupId{value: val, isSet: true}
}

func (v NullableGroupId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


