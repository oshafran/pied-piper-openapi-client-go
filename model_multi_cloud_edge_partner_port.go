/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MultiCloudEdgePartnerPort struct for MultiCloudEdgePartnerPort
type MultiCloudEdgePartnerPort struct {
	CloudType *string `json:"cloudType,omitempty"`
	EdgeType *string `json:"edgeType,omitempty"`
	EqPartnerPort *EquinixPartnerPort `json:"eqPartnerPort,omitempty"`
	LocationId *string `json:"locationId,omitempty"`
	MpPartnerPort *MegaportPartnerPort `json:"mpPartnerPort,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewMultiCloudEdgePartnerPort instantiates a new MultiCloudEdgePartnerPort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiCloudEdgePartnerPort() *MultiCloudEdgePartnerPort {
	this := MultiCloudEdgePartnerPort{}
	return &this
}

// NewMultiCloudEdgePartnerPortWithDefaults instantiates a new MultiCloudEdgePartnerPort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiCloudEdgePartnerPortWithDefaults() *MultiCloudEdgePartnerPort {
	this := MultiCloudEdgePartnerPort{}
	return &this
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *MultiCloudEdgePartnerPort) GetCloudType() string {
	if o == nil || isNil(o.CloudType) {
		var ret string
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgePartnerPort) GetCloudTypeOk() (*string, bool) {
	if o == nil || isNil(o.CloudType) {
    return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *MultiCloudEdgePartnerPort) HasCloudType() bool {
	if o != nil && !isNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given string and assigns it to the CloudType field.
func (o *MultiCloudEdgePartnerPort) SetCloudType(v string) {
	o.CloudType = &v
}

// GetEdgeType returns the EdgeType field value if set, zero value otherwise.
func (o *MultiCloudEdgePartnerPort) GetEdgeType() string {
	if o == nil || isNil(o.EdgeType) {
		var ret string
		return ret
	}
	return *o.EdgeType
}

// GetEdgeTypeOk returns a tuple with the EdgeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgePartnerPort) GetEdgeTypeOk() (*string, bool) {
	if o == nil || isNil(o.EdgeType) {
    return nil, false
	}
	return o.EdgeType, true
}

// HasEdgeType returns a boolean if a field has been set.
func (o *MultiCloudEdgePartnerPort) HasEdgeType() bool {
	if o != nil && !isNil(o.EdgeType) {
		return true
	}

	return false
}

// SetEdgeType gets a reference to the given string and assigns it to the EdgeType field.
func (o *MultiCloudEdgePartnerPort) SetEdgeType(v string) {
	o.EdgeType = &v
}

// GetEqPartnerPort returns the EqPartnerPort field value if set, zero value otherwise.
func (o *MultiCloudEdgePartnerPort) GetEqPartnerPort() EquinixPartnerPort {
	if o == nil || isNil(o.EqPartnerPort) {
		var ret EquinixPartnerPort
		return ret
	}
	return *o.EqPartnerPort
}

// GetEqPartnerPortOk returns a tuple with the EqPartnerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgePartnerPort) GetEqPartnerPortOk() (*EquinixPartnerPort, bool) {
	if o == nil || isNil(o.EqPartnerPort) {
    return nil, false
	}
	return o.EqPartnerPort, true
}

// HasEqPartnerPort returns a boolean if a field has been set.
func (o *MultiCloudEdgePartnerPort) HasEqPartnerPort() bool {
	if o != nil && !isNil(o.EqPartnerPort) {
		return true
	}

	return false
}

// SetEqPartnerPort gets a reference to the given EquinixPartnerPort and assigns it to the EqPartnerPort field.
func (o *MultiCloudEdgePartnerPort) SetEqPartnerPort(v EquinixPartnerPort) {
	o.EqPartnerPort = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *MultiCloudEdgePartnerPort) GetLocationId() string {
	if o == nil || isNil(o.LocationId) {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgePartnerPort) GetLocationIdOk() (*string, bool) {
	if o == nil || isNil(o.LocationId) {
    return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *MultiCloudEdgePartnerPort) HasLocationId() bool {
	if o != nil && !isNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *MultiCloudEdgePartnerPort) SetLocationId(v string) {
	o.LocationId = &v
}

// GetMpPartnerPort returns the MpPartnerPort field value if set, zero value otherwise.
func (o *MultiCloudEdgePartnerPort) GetMpPartnerPort() MegaportPartnerPort {
	if o == nil || isNil(o.MpPartnerPort) {
		var ret MegaportPartnerPort
		return ret
	}
	return *o.MpPartnerPort
}

// GetMpPartnerPortOk returns a tuple with the MpPartnerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgePartnerPort) GetMpPartnerPortOk() (*MegaportPartnerPort, bool) {
	if o == nil || isNil(o.MpPartnerPort) {
    return nil, false
	}
	return o.MpPartnerPort, true
}

// HasMpPartnerPort returns a boolean if a field has been set.
func (o *MultiCloudEdgePartnerPort) HasMpPartnerPort() bool {
	if o != nil && !isNil(o.MpPartnerPort) {
		return true
	}

	return false
}

// SetMpPartnerPort gets a reference to the given MegaportPartnerPort and assigns it to the MpPartnerPort field.
func (o *MultiCloudEdgePartnerPort) SetMpPartnerPort(v MegaportPartnerPort) {
	o.MpPartnerPort = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MultiCloudEdgePartnerPort) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiCloudEdgePartnerPort) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MultiCloudEdgePartnerPort) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MultiCloudEdgePartnerPort) SetName(v string) {
	o.Name = &v
}

func (o MultiCloudEdgePartnerPort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CloudType) {
		toSerialize["cloudType"] = o.CloudType
	}
	if !isNil(o.EdgeType) {
		toSerialize["edgeType"] = o.EdgeType
	}
	if !isNil(o.EqPartnerPort) {
		toSerialize["eqPartnerPort"] = o.EqPartnerPort
	}
	if !isNil(o.LocationId) {
		toSerialize["locationId"] = o.LocationId
	}
	if !isNil(o.MpPartnerPort) {
		toSerialize["mpPartnerPort"] = o.MpPartnerPort
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableMultiCloudEdgePartnerPort struct {
	value *MultiCloudEdgePartnerPort
	isSet bool
}

func (v NullableMultiCloudEdgePartnerPort) Get() *MultiCloudEdgePartnerPort {
	return v.value
}

func (v *NullableMultiCloudEdgePartnerPort) Set(val *MultiCloudEdgePartnerPort) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiCloudEdgePartnerPort) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiCloudEdgePartnerPort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiCloudEdgePartnerPort(val *MultiCloudEdgePartnerPort) *NullableMultiCloudEdgePartnerPort {
	return &NullableMultiCloudEdgePartnerPort{value: val, isSet: true}
}

func (v NullableMultiCloudEdgePartnerPort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiCloudEdgePartnerPort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


