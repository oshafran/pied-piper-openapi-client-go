/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Banner struct for Banner
type Banner struct {
	LoginMessage *string `json:"loginMessage,omitempty"`
	Motd *string `json:"motd,omitempty"`
}

// NewBanner instantiates a new Banner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBanner() *Banner {
	this := Banner{}
	return &this
}

// NewBannerWithDefaults instantiates a new Banner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBannerWithDefaults() *Banner {
	this := Banner{}
	return &this
}

// GetLoginMessage returns the LoginMessage field value if set, zero value otherwise.
func (o *Banner) GetLoginMessage() string {
	if o == nil || o.LoginMessage == nil {
		var ret string
		return ret
	}
	return *o.LoginMessage
}

// GetLoginMessageOk returns a tuple with the LoginMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Banner) GetLoginMessageOk() (*string, bool) {
	if o == nil || o.LoginMessage == nil {
		return nil, false
	}
	return o.LoginMessage, true
}

// HasLoginMessage returns a boolean if a field has been set.
func (o *Banner) HasLoginMessage() bool {
	if o != nil && o.LoginMessage != nil {
		return true
	}

	return false
}

// SetLoginMessage gets a reference to the given string and assigns it to the LoginMessage field.
func (o *Banner) SetLoginMessage(v string) {
	o.LoginMessage = &v
}

// GetMotd returns the Motd field value if set, zero value otherwise.
func (o *Banner) GetMotd() string {
	if o == nil || o.Motd == nil {
		var ret string
		return ret
	}
	return *o.Motd
}

// GetMotdOk returns a tuple with the Motd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Banner) GetMotdOk() (*string, bool) {
	if o == nil || o.Motd == nil {
		return nil, false
	}
	return o.Motd, true
}

// HasMotd returns a boolean if a field has been set.
func (o *Banner) HasMotd() bool {
	if o != nil && o.Motd != nil {
		return true
	}

	return false
}

// SetMotd gets a reference to the given string and assigns it to the Motd field.
func (o *Banner) SetMotd(v string) {
	o.Motd = &v
}

func (o Banner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoginMessage != nil {
		toSerialize["loginMessage"] = o.LoginMessage
	}
	if o.Motd != nil {
		toSerialize["motd"] = o.Motd
	}
	return json.Marshal(toSerialize)
}

type NullableBanner struct {
	value *Banner
	isSet bool
}

func (v NullableBanner) Get() *Banner {
	return v.value
}

func (v *NullableBanner) Set(val *Banner) {
	v.value = val
	v.isSet = true
}

func (v NullableBanner) IsSet() bool {
	return v.isSet
}

func (v *NullableBanner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBanner(val *Banner) *NullableBanner {
	return &NullableBanner{value: val, isSet: true}
}

func (v NullableBanner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBanner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


