/*
Cisco SD-WAN vManage API

The vManage API exposes the functionality of operations maintaining devices and the overlay network

API version: 2.0.0
Contact: vmanage@cisco.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EntityOwnershipInfo struct for EntityOwnershipInfo
type EntityOwnershipInfo struct {
	Bucket *string `json:"bucket,omitempty"`
	EntityName *string `json:"entityName,omitempty"`
	Owner *string `json:"owner,omitempty"`
}

// NewEntityOwnershipInfo instantiates a new EntityOwnershipInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityOwnershipInfo() *EntityOwnershipInfo {
	this := EntityOwnershipInfo{}
	return &this
}

// NewEntityOwnershipInfoWithDefaults instantiates a new EntityOwnershipInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityOwnershipInfoWithDefaults() *EntityOwnershipInfo {
	this := EntityOwnershipInfo{}
	return &this
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *EntityOwnershipInfo) GetBucket() string {
	if o == nil || isNil(o.Bucket) {
		var ret string
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityOwnershipInfo) GetBucketOk() (*string, bool) {
	if o == nil || isNil(o.Bucket) {
    return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *EntityOwnershipInfo) HasBucket() bool {
	if o != nil && !isNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given string and assigns it to the Bucket field.
func (o *EntityOwnershipInfo) SetBucket(v string) {
	o.Bucket = &v
}

// GetEntityName returns the EntityName field value if set, zero value otherwise.
func (o *EntityOwnershipInfo) GetEntityName() string {
	if o == nil || isNil(o.EntityName) {
		var ret string
		return ret
	}
	return *o.EntityName
}

// GetEntityNameOk returns a tuple with the EntityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityOwnershipInfo) GetEntityNameOk() (*string, bool) {
	if o == nil || isNil(o.EntityName) {
    return nil, false
	}
	return o.EntityName, true
}

// HasEntityName returns a boolean if a field has been set.
func (o *EntityOwnershipInfo) HasEntityName() bool {
	if o != nil && !isNil(o.EntityName) {
		return true
	}

	return false
}

// SetEntityName gets a reference to the given string and assigns it to the EntityName field.
func (o *EntityOwnershipInfo) SetEntityName(v string) {
	o.EntityName = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *EntityOwnershipInfo) GetOwner() string {
	if o == nil || isNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityOwnershipInfo) GetOwnerOk() (*string, bool) {
	if o == nil || isNil(o.Owner) {
    return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *EntityOwnershipInfo) HasOwner() bool {
	if o != nil && !isNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *EntityOwnershipInfo) SetOwner(v string) {
	o.Owner = &v
}

func (o EntityOwnershipInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	if !isNil(o.EntityName) {
		toSerialize["entityName"] = o.EntityName
	}
	if !isNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	return json.Marshal(toSerialize)
}

type NullableEntityOwnershipInfo struct {
	value *EntityOwnershipInfo
	isSet bool
}

func (v NullableEntityOwnershipInfo) Get() *EntityOwnershipInfo {
	return v.value
}

func (v *NullableEntityOwnershipInfo) Set(val *EntityOwnershipInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityOwnershipInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityOwnershipInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityOwnershipInfo(val *EntityOwnershipInfo) *NullableEntityOwnershipInfo {
	return &NullableEntityOwnershipInfo{value: val, isSet: true}
}

func (v NullableEntityOwnershipInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityOwnershipInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


