/*
Cisco SD-WAN vManage API

Testing ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
    "context"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    openapiclient "./openapi"
)

func Test_openapi_ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService(t *testing.T) {

    configuration := openapiclient.NewConfiguration()
    apiClient := openapiclient.NewAPIClient(configuration)

    t.Run("Test ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService CreatePolicyList15", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApi.CreatePolicyList15(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService DeletePolicyList15", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id string

        resp, httpRes, err := apiClient.ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApi.DeletePolicyList15(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService DeletePolicyListsWithInfoTag15", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApi.DeletePolicyListsWithInfoTag15(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService EditPolicyList15", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id string

        resp, httpRes, err := apiClient.ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApi.EditPolicyList15(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService GetAllDataPrefixAndFQDNLists", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApi.GetAllDataPrefixAndFQDNLists(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService GetListsById15", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id string

        resp, httpRes, err := apiClient.ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApi.GetListsById15(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService GetPolicyListsWithInfoTag15", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApi.GetPolicyListsWithInfoTag15(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService PreviewPolicyList15", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApi.PreviewPolicyList15(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApiService PreviewPolicyListById15", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id string

        resp, httpRes, err := apiClient.ConfigurationPolicyDataPrefixAndFQDNAllTypesOfListsBuilderApi.PreviewPolicyListById15(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
