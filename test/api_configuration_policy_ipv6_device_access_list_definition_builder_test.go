/*
Cisco SD-WAN vManage API

Testing ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
    "context"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    openapiclient "./openapi"
)

func Test_openapi_ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService(t *testing.T) {

    configuration := openapiclient.NewConfiguration()
    apiClient := openapiclient.NewAPIClient(configuration)

    t.Run("Test ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService CreatePolicyDefinition17", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApi.CreatePolicyDefinition17(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService DeletePolicyDefinition17", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id string

        resp, httpRes, err := apiClient.ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApi.DeletePolicyDefinition17(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService EditMultiplePolicyDefinition17", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id string

        resp, httpRes, err := apiClient.ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApi.EditMultiplePolicyDefinition17(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService EditPolicyDefinition17", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id string

        resp, httpRes, err := apiClient.ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApi.EditPolicyDefinition17(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService GetDefinitions17", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApi.GetDefinitions17(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService GetPolicyDefinition17", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id string

        resp, httpRes, err := apiClient.ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApi.GetPolicyDefinition17(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService PreviewPolicyDefinition17", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApi.PreviewPolicyDefinition17(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService PreviewPolicyDefinitionById17", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var id string

        resp, httpRes, err := apiClient.ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApi.PreviewPolicyDefinitionById17(context.Background(), id).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApiService SavePolicyDefinitionInBulk17", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationPolicyIPv6DeviceAccessListDefinitionBuilderApi.SavePolicyDefinitionInBulk17(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
