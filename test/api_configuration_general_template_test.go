/*
Cisco SD-WAN vManage API

Testing ConfigurationGeneralTemplateApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
    "context"
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    openapiclient "./openapi"
)

func Test_openapi_ConfigurationGeneralTemplateApiService(t *testing.T) {

    configuration := openapiclient.NewConfiguration()
    apiClient := openapiclient.NewAPIClient(configuration)

    t.Run("Test ConfigurationGeneralTemplateApiService ChangeTemplateResourceGroup", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var templateId string
        var resourceGroupName string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.ChangeTemplateResourceGroup(context.Background(), templateId, resourceGroupName).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService CloneTemplate", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.CloneTemplate(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService CreateFeatureTemplate", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.CreateFeatureTemplate(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService CreateLITemplate", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.CreateLITemplate(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService DeleteGeneralTemplate", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var templateId string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.DeleteGeneralTemplate(context.Background(), templateId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService EditFeatureTemplate", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var templateId string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.EditFeatureTemplate(context.Background(), templateId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService EditLITemplate", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var templateId string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.EditLITemplate(context.Background(), templateId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GenerateFeatureTemplateList", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GenerateFeatureTemplateList(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GenerateMasterTemplateDefinition", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var typeName string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GenerateMasterTemplateDefinition(context.Background(), typeName).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GenerateTemplateByDeviceType", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var deviceType string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GenerateTemplateByDeviceType(context.Background(), deviceType).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GenerateTemplateTypeDefinition", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var typeName string
        var version string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GenerateTemplateTypeDefinition(context.Background(), typeName, version).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GenerateTemplateTypes", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GenerateTemplateTypes(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GetDefaultNetworks", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GetDefaultNetworks(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GetDeviceTemplatesAttachedToFeature", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var templateId string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GetDeviceTemplatesAttachedToFeature(context.Background(), templateId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GetEncryptedString", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GetEncryptedString(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GetGeneralTemplate", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var templateId string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GetGeneralTemplate(context.Background(), templateId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GetNetworkInterface", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GetNetworkInterface(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GetTemplateDefinition", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        var templateId string

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GetTemplateDefinition(context.Background(), templateId).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService GetTemplateForMigration", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.GetTemplateForMigration(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test ConfigurationGeneralTemplateApiService ListLITemplate", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.ConfigurationGeneralTemplateApi.ListLITemplate(context.Background()).Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
